#include <ros/ros.h>
#include "snowmower_mapping/pubTest.h"


void PubTest::CB(const std_msgs::Bool& msg){
  ros::Time currTime = ros::Time::now();
  pub_.publish(currTime);
  ROS_INFO_STREAM("The current time is " << currTime);
}

/* Constructor */
PubTest::PubTest() {
  // Set up the publisher and subsciber objects
  pub_ = nh_.advertise<std_msgs::Time>("time",1);
  sub_ = nh_.subscribe("test",10,&Mapper::CB,this);
  // Test to see if this command works or returns zero
  ros::Time begin = ros::Time::now();
  ROS_INFO_STREAM("First publish at " << begin);
  // And test to see if publish works
  pub_.publish(begin);
};

/* Destructor */
PubTest::~PubTest() {};

int main(int argc, char **argv) {
  ros::init(argc, argv, "pubTest");
  PubTest pubTest;
  ROS_INFO_STREAM("The time is currently" << ros::Time::now());
  ros::spin();
  return 0;
}
