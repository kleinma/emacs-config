;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETERS_031014_HPP" variable (:constant-flag t) nil [285 312])
            ("boost/detail/is_xxx.hpp" include (:system-flag t) nil [314 348])
            ("boost/type_traits/is_const.hpp" include (:system-flag t) nil [350 391])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [393 424])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [425 455])
            ("boost/mpl/always.hpp" include (:system-flag t) nil [456 487])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [488 516])
            ("boost/mpl/or.hpp" include (:system-flag t) nil [517 544])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [545 572])
            ("boost/mpl/identity.hpp" include (:system-flag t) nil [573 606])
            ("boost/mpl/not.hpp" include (:system-flag t) nil [607 635])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [636 668])
            ("boost/mpl/pair.hpp" include (:system-flag t) nil [669 698])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [700 740])
            ("boost/type_traits/remove_reference.hpp" include (:system-flag t) nil [741 790])
            ("boost/preprocessor/repetition/enum.hpp" include (:system-flag t) nil [792 841])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [842 898])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [899 964])
            ("boost/preprocessor/arithmetic/sub.hpp" include (:system-flag t) nil [965 1013])
            ("boost/preprocessor/repetition/repeat.hpp" include (:system-flag t) nil [1014 1065])
            ("boost/preprocessor/repetition/enum_shifted.hpp" include (:system-flag t) nil [1066 1123])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [1124 1187])
            ("boost/preprocessor/repetition/enum_shifted_params.hpp" include (:system-flag t) nil [1188 1252])
            ("boost/preprocessor/seq/elem.hpp" include (:system-flag t) nil [1253 1295])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [1296 1347])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [1348 1402])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [1403 1440])
            ("boost/parameter/aux_/arg_list.hpp" include (:system-flag t) nil [1442 1486])
            ("boost/parameter/aux_/yesno.hpp" include (:system-flag t) nil [1487 1528])
            ("boost/parameter/aux_/void.hpp" include (:system-flag t) nil [1529 1569])
            ("boost/parameter/aux_/default.hpp" include (:system-flag t) nil [1570 1613])
            ("boost/parameter/aux_/unwrap_cv_reference.hpp" include (:system-flag t) nil [1614 1669])
            ("boost/parameter/aux_/tagged_argument.hpp" include (:system-flag t) nil [1670 1721])
            ("boost/parameter/aux_/tag.hpp" include (:system-flag t) nil [1722 1761])
            ("boost/parameter/aux_/template_keyword.hpp" include (:system-flag t) nil [1762 1814])
            ("boost/parameter/aux_/set.hpp" include (:system-flag t) nil [1815 1854])
            ("boost/parameter/config.hpp" include (:system-flag t) nil [1855 1892])
            ("parameter_" type
               (:members 
                  ( ("unmatched_argument" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "struct"
                        :members 
                          ( ("BOOST_MPL_ASSERT" function
                               (:prototype-flag t
                                :type "int")
                                (reparse-symbol classsubparts) [1976 2019])
                            ("type" type
                               (:typedef ("int")
                                :type "typedef")
                                (reparse-symbol classsubparts) [2026 2043]))                          )
                        (reparse-symbol namespacesubparts) [1919 2048]))                  
                :type "namespace")
                nil [1894 2051])
            ("boost" type
               (:members 
                  ( ("reference_wrapper" type
                       (:template 
                          ( ("T" type (:type "class") nil nil))                          
                        :type "class"
                        :prototype t)
                        (reparse-symbol namespacesubparts) [2096 2138])
                    ("parameter" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("use_default" type (:type "struct") (reparse-symbol namespacesubparts) [2179 2201]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [2163 2203])
                            ("required" type
                               (:members 
                                  ( ("key_type" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3056 3077])
                                    ("predicate" type
                                       (:typedef ("Predicate" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3082 3110]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3034 3113])
                            ("optional" type
                               (:members 
                                  ( ("key_type" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3194 3215])
                                    ("predicate" type
                                       (:typedef ("Predicate" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3220 3248]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3172 3251])
                            ("deduced" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("key_type" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [3295 3316]))                                  )
                                (reparse-symbol namespacesubparts) [3253 3319])
                            ("aux" type
                               (:members 
                                  ( ("type" variable (:type "int") (reparse-symbol namespacesubparts) [3730 3740])
                                    ("is_deduced" type
                                       (:template 
                                          ( ("S" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::eval_if::type" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3744 3946])
                                    ("get_tag_type0" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T::key_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4434 4468]))                                          )
                                        (reparse-symbol namespacesubparts) [4382 4473])
                                    ("tag_type" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::eval_if" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4694 4907])
                                    ("has_default" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::not_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4911 4989])
                                    ("get_predicate_or_default" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5098 5113]))                                          )
                                        (reparse-symbol namespacesubparts) [5035 5118])
                                    ("get_predicate_or_default" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::always" type
                                                     (:template-specifier 
                                                        ( ("mpl::true_" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5191 5228]))                                          
                                        :template-specifier 
                                          ( ("use_default" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5122 5233])
                                    ("get_predicate" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5403 5419]))                                          )
                                        (reparse-symbol namespacesubparts) [5275 5424])
                                    ("predicate" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::eval_if" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5428 5668])
                                    ("as_parameter_requirements" type
                                       (:template 
                                          ( ("ParameterSpec" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [6188 6193]))                                          )
                                        (reparse-symbol namespacesubparts) [5921 6198])
                                    ("is_named_argument" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::or_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6202 6342])
                                    ("satisfies" type
                                       (:template 
                                          ( ("ArgList" type (:type "class") nil nil)
                                            ("ParameterRequirements" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_CONSTANT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [7241 7246])
                                                    ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7247 7459]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [7208 7468])
                                            ("type" type
                                               (:typedef ("mpl::bool_" type
                                                     (:template-specifier 
                                                        ( ("satisfies::value" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [7476 7518]))                                          )
                                        (reparse-symbol namespacesubparts) [6439 7530])
                                    ("tag_deduced" type
                                       (:template 
                                          ( ("UsedArgs" type (:type "class") nil nil)
                                            ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [8291 8296]))                                          )
                                        (reparse-symbol namespacesubparts) [8007 8301])
                                    ("deduce_tag" type
                                       (:template 
                                          ( ("Argument" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [8305 8449])
                                    ("lambda_tag" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [8489 8507])
                                    ("deduce_tag0" type
                                       (:template 
                                          ( ("Argument" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("spec" type
                                               (:typedef ("DeducedArgs::spec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [8702 8742])
                                            ("condition" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8937 8952])
                                            ("BOOST_MPL_ASSERT" function
                                               (:prototype-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [9015 9181])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9394 9404]))                                          )
                                        (reparse-symbol namespacesubparts) [8547 9409])
                                    ("deduce_tag" type
                                       (:template 
                                          ( ("Argument" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [10195 10396]))                                          )
                                        (reparse-symbol namespacesubparts) [10041 10401])
                                    ("make_arg_list_aux" type
                                       (:template 
                                          ( ("List" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil)
                                            ("Positional" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("Error" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [10405 10593])
                                    ("insert_tagged" type
                                       (:template 
                                          ( ("UsedArgs" type (:type "class") nil nil)
                                            ("Tagged" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10869 10879]))                                          )
                                        (reparse-symbol namespacesubparts) [10710 10884])
                                    ("make_arg_list0" type
                                       (:template 
                                          ( ("List" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil)
                                            ("Positional" type (:type "class") nil nil)
                                            ("UsedArgs" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("Error" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("argument" type
                                               (:typedef ("List::arg" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11481 11517])
                                            ("parameter_spec" type
                                               (:typedef ("List::spec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11531 11574])
                                            ("tag_" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11624 11634])
                                            ("is_tagged" type
                                               (:typedef ("is_named_argument" type
                                                     (:template-specifier 
                                                        ( ("argument" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11642 11688])
                                            ("positional" type
                                               (:typedef ("mpl::and_" type
                                                     (:template-specifier 
                                                        ( ("mpl::not_" type (:template-specifier 
                                                            ( ("mpl::or_" type (:template-specifier 
                                                                ( ("is_deduced" type (:template-specifier 
                                                                    ( ("parameter_spec" type nil nil nil))                                                                    ) nil nil)
                                                                  ("is_tagged" type nil nil nil))                                                                ) nil nil))                                                            ) nil nil)
                                                          ("Positional" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11816 11972])
                                            ("used_args" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12237 12390])
                                            ("deduced_data" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12548 12762])
                                            ("tagged" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12820 13285])
                                            ("error" type
                                               (:typedef ("mpl::if_::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13380 13600])
                                            ("argument_pack" type
                                               (:typedef ("mpl::if_::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13608 13760])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13982 13992]))                                          )
                                        (reparse-symbol namespacesubparts) [11042 13997])
                                    ("make_arg_list_aux" type
                                       (:template 
                                          ( ("List" type (:type "class") nil nil)
                                            ("DeducedArgs" type (:type "class") nil nil)
                                            ("TagFn" type (:type "class") nil nil)
                                            ("Positional" type (:type "class") nil nil)
                                            ("DeducedSet" type (:type "class") nil nil)
                                            ("ArgumentPack" type (:type "class") nil nil)
                                            ("Error" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15877 16111]))                                          )
                                        (reparse-symbol namespacesubparts) [15677 16116])
                                    ("make_arg_list" type
                                       (:members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [16520 16530]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [16363 16535])
                                    ("item" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("spec" type
                                               (:typedef ("Spec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16653 16671])
                                            ("arg" type
                                               (:typedef ("Arg" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16788 16804])
                                            ("tail" type
                                               (:typedef ("Tail" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16811 16829]))                                          )
                                        (reparse-symbol namespacesubparts) [16576 16834])
                                    ("make_item" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [16957 16962]))                                          )
                                        (reparse-symbol namespacesubparts) [16838 16967])
                                    ("make_items" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17076 17224]))                                          )
                                        (reparse-symbol namespacesubparts) [17001 17229])
                                    ("deduced_item" type
                                       (:template 
                                          ( ("ParameterSpec" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("spec" type
                                               (:typedef ("ParameterSpec" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17369 17396])
                                            ("tail" type
                                               (:typedef ("Tail" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17403 17421]))                                          )
                                        (reparse-symbol namespacesubparts) [17286 17426])
                                    ("make_deduced_item" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [17601 17606]))                                          )
                                        (reparse-symbol namespacesubparts) [17482 17611])
                                    ("make_deduced_items" type
                                       (:template 
                                          ( ("Spec" type (:type "class") nil nil)
                                            ("Tail" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::eval_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17687 17929]))                                          )
                                        (reparse-symbol namespacesubparts) [17615 17934])
                                    ("BOOST_PARAMETER_make_arg_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18165 18194])
                                    ("BOOST_PARAMETER_right_angle" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18396 18423])
                                    ("BOOST_PARAMETER_build_arg_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18447 18477])
                                    ("BOOST_PARAMETER_make_deduced_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [18845 18878])
                                    ("BOOST_PARAMETER_build_deduced_list" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19017 19051])
                                    ("tag_keyword_arg" type
                                       (:members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("K" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :superclasses 
                                                  ( ("tag" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  )
                                                (reparse-symbol classsubparts) [19442 19517]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [19409 19522])
                                    ("tag_template_keyword_arg" type
                                       (:members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("K" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("template_keyword" type
                                                             (:template-specifier 
                                                                ( ("K" type nil nil nil)
                                                                  ("T" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [19633 19668]))                                                  )
                                                (reparse-symbol classsubparts) [19568 19677]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [19526 19682]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [3321 19685])
                            ("BOOST_PARAMETER_FORWARD_TYPEDEF" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19712 19743])
                            ("BOOST_PARAMETER_FORWARD_TYPEDEFS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19867 19899])
                            ("BOOST_PARAMETER_TEMPLATE_ARGS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19995 20024])
                            ("parameters" type
                               (:members 
                                  ( ("deduced_list" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20372 20390])
                                    ("BOOST_PARAMETER_satisfies" variable (:constant-flag t) (reparse-symbol classsubparts) [21208 21233])
                                    ("type" variable (:type "int") (reparse-symbol classsubparts) [23168 23180])
                                    ("bind" type
                                       (:members 
                                          ( ("result" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [24244 24256])
                                            ("type" type
                                               (:typedef ("mpl::first::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [24266 24313]))                                          
                                        :type "struct")
                                        (reparse-symbol classsubparts) [23964 24320])
                                    ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :type ("aux::empty_arg_list" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [24778 24865])
                                    ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("a0" variable
                                               (:reference 1
                                                :type ("A0" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25113 25120]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [25093 25726])
                                    ("()" function
                                       (:methodconst-flag t
                                        :operator-flag t
                                        :arguments 
                                          ( ("a0" variable
                                               (:reference 1
                                                :type ("A0" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26056 26063])
                                            ("a1" variable
                                               (:reference 1
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26064 26071]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [26036 26743])
                                    ("BOOST_PP_ITERATION_PARAMS_1" variable (:constant-flag t) (reparse-symbol classsubparts) [26807 26834]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [20187 26955]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2140 26958]))                  
                :type "namespace")
                nil [2077 26984]))          
      :file "parameters.hpp"
      :pointmax 27044
      :fsize 27043
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax '((semantic-list 26949 . 26951) (symbol 26933 . 26949) (symbol 26925 . 26932) (punctuation 26924 . 26925) (punctuation 26035 . 26036) (punctuation 26034 . 26035) (punctuation 26033 . 26034) (symbol 26024 . 26028) (punctuation 26023 . 26024) (punctuation 26022 . 26023) (punctuation 26021 . 26022) (symbol 25997 . 26012) (punctuation 25996 . 25997) (punctuation 25995 . 25996) (symbol 25992 . 25995) (punctuation 25990 . 25991) (symbol 25967 . 25979) (punctuation 25965 . 25966) (punctuation 25953 . 25954) (punctuation 25939 . 25940) (symbol 25920 . 25922) (punctuation 25919 . 25920) (symbol 25916 . 25919) (punctuation 25894 . 25895) (symbol 25890 . 25894) (punctuation 25889 . 25890) (punctuation 25888 . 25889) (symbol 25885 . 25888) (punctuation 25883 . 25884) (symbol 25866 . 25868) (punctuation 25865 . 25866) (symbol 25862 . 25865) (punctuation 25844 . 25845) (symbol 25840 . 25844) (punctuation 25839 . 25840) (punctuation 25838 . 25839) (symbol 25835 . 25838) (punctuation 25821 . 25822) (symbol 25808 . 25821) (punctuation 25807 . 25808) (punctuation 25806 . 25807) (symbol 25803 . 25806) (TYPENAME 25794 . 25802) (punctuation 25784 . 25785) (symbol 25779 . 25784) (punctuation 25778 . 25779) (punctuation 25777 . 25778) (symbol 25774 . 25777) (TYPENAME 25765 . 25773) (punctuation 25759 . 25760) (symbol 25757 . 25759) (CLASS 25751 . 25756) (punctuation 25749 . 25750) (symbol 25747 . 25749) (CLASS 25741 . 25746) (punctuation 25740 . 25741) (TEMPLATE 25732 . 25740) (punctuation 25092 . 25093) (punctuation 25091 . 25092) (punctuation 25090 . 25091) (symbol 25081 . 25085) (punctuation 25080 . 25081) (punctuation 25079 . 25080) (punctuation 25078 . 25079) (symbol 25054 . 25069) (punctuation 25053 . 25054) (punctuation 25052 . 25053) (symbol 25049 . 25052) (punctuation 25047 . 25048) (symbol 25024 . 25036) (punctuation 25022 . 25023) (punctuation 25010 . 25011) (symbol 24995 . 24997) (punctuation 24994 . 24995) (symbol 24991 . 24994) (punctuation 24973 . 24974) (symbol 24969 . 24973) (punctuation 24968 . 24969) (punctuation 24967 . 24968) (symbol 24964 . 24967) (punctuation 24950 . 24951) (symbol 24937 . 24950) (punctuation 24936 . 24937) (punctuation 24935 . 24936) (symbol 24932 . 24935) (TYPENAME 24923 . 24931) (punctuation 24913 . 24914) (symbol 24908 . 24913) (punctuation 24907 . 24908) (punctuation 24906 . 24907) (symbol 24903 . 24906) (TYPENAME 24894 . 24902) (punctuation 24888 . 24889) (symbol 24886 . 24888) (CLASS 24880 . 24885) (punctuation 24879 . 24880) (TEMPLATE 24871 . 24879) (semantic-list #("(n, BOOST_PARAMETER_FORWARD_TYPEDEF, (src)(dest))" 0 1 (macros (("dest" symbol "parameter_spec" 24390 . 24404) ("src" symbol "PS" 24386 . 24388) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24359 . 24384)))) 24326 . 24405) (symbol "BOOST_PP_REPEAT" 24326 . 24405) (punctuation 24243 . 24244) (punctuation 24242 . 24243) (punctuation 24241 . 24242) (symbol 24208 . 24232) (punctuation 24207 . 24208) (punctuation 24206 . 24207) (symbol 24203 . 24206) (punctuation 24201 . 24202) (symbol 24178 . 24190) (punctuation 24176 . 24177) (symbol 24161 . 24165) (punctuation 24160 . 24161) (punctuation 24159 . 24160) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (punctuation ">" 24048 . 24159) (symbol "void_" 24048 . 24159) (punctuation "<" 24048 . 24159) (symbol "identity" 24048 . 24159) (punctuation ":" 24048 . 24159) (punctuation ":" 24048 . 24159) (symbol "mpl" 24048 . 24159) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (TYPENAME 24039 . 24047) (punctuation 24025 . 24026) (symbol 24012 . 24025) (punctuation 24011 . 24012) (punctuation 24010 . 24011) (symbol 24007 . 24010) (TYPENAME 23998 . 24006) (TYPEDEF 23990 . 23997) (punctuation 24243 . 24244) (punctuation 24242 . 24243) (punctuation 24241 . 24242) (symbol 24208 . 24232) (punctuation 24207 . 24208) (punctuation 24206 . 24207) (symbol 24203 . 24206) (punctuation 24201 . 24202) (symbol 24178 . 24190) (punctuation 24176 . 24177) (symbol 24161 . 24165) (punctuation 24160 . 24161) (punctuation 24159 . 24160) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (punctuation ">" 24048 . 24159) (symbol "void_" 24048 . 24159) (punctuation "<" 24048 . 24159) (symbol "identity" 24048 . 24159) (punctuation ":" 24048 . 24159) (punctuation ":" 24048 . 24159) (symbol "mpl" 24048 . 24159) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 0 1 (macros (("argument_type" symbol "PS" 24140 . 24142) ("parameter_spec" symbol "make_items" 24128 . 24138) ("make" symbol "aux" 24123 . 24126) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 24096 . 24121)))) 24048 . 24159) (symbol "BOOST_PP_REPEAT" 24048 . 24159) (TYPENAME 24039 . 24047) (punctuation 24025 . 24026) (symbol 24012 . 24025) (punctuation 24011 . 24012) (punctuation 24010 . 24011) (symbol 24007 . 24010) (TYPENAME 23998 . 24006) (TYPEDEF 23990 . 23997) (punctuation 23958 . 23959) (semantic-list 23848 . 23934) (symbol 23821 . 23848) (punctuation 23898 . 23899) (punctuation 23476 . 23477) (TEMPLATE 23467 . 23475) (punctuation 23167 . 23168) (punctuation 23166 . 23167) (punctuation 23165 . 23166) (symbol 23152 . 23156) (punctuation 23151 . 23152) (punctuation 23150 . 23151) (punctuation 23149 . 23150) (symbol 23091 . 23097) (punctuation 23090 . 23091) (punctuation 23089 . 23090) (symbol 23086 . 23089) (punctuation 23084 . 23085) (symbol 23054 . 23069) (punctuation 23053 . 23054) (punctuation 23052 . 23053) (symbol 23049 . 23052) (punctuation 23047 . 23048) (symbol 23020 . 23032) (punctuation 23018 . 23019) (symbol 22999 . 23003) (punctuation 22998 . 22999) (punctuation 22997 . 22998) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("argument_type" symbol "PS" 22974 . 22976) ("parameter_spec" symbol "make_items" 22962 . 22972) ("make" symbol "aux" 22957 . 22960) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 22930 . 22955)))) 22878 . 22997) (symbol "BOOST_PP_REPEAT" 22878 . 22997) (punctuation ">" 22878 . 22997) (symbol "void_" 22878 . 22997) (punctuation "<" 22878 . 22997) (symbol "identity" 22878 . 22997) (punctuation ":" 22878 . 22997) (punctuation ":" 22878 . 22997) (symbol "mpl" 22878 . 22997) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 0 1 (macros (("argument_type" symbol "PS" 22974 . 22976) ("parameter_spec" symbol "make_items" 22962 . 22972) ("make" symbol "aux" 22957 . 22960) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 22930 . 22955)))) 22878 . 22997) (symbol "BOOST_PP_REPEAT" 22878 . 22997) (TYPENAME 22869 . 22877) (punctuation 22851 . 22852) (symbol 22838 . 22851) (punctuation 22837 . 22838) (punctuation 22836 . 22837) (symbol 22833 . 22836) (TYPENAME 22824 . 22832) (punctuation 22810 . 22811) (symbol 22800 . 22810) (punctuation 22798 . 22799) (symbol 22694 . 22699) (STRUCT 22687 . 22693) (punctuation 22681 . 22682) (semantic-list 22583 . 22669) (symbol 22556 . 22583) (punctuation 22633 . 22634) (punctuation 22211 . 22212) (TEMPLATE 22203 . 22211) (punctuation 22082 . 22083) (semantic-list 22080 . 22082) (punctuation 22074 . 22075) (symbol 22060 . 22065) (punctuation 22058 . 22059) (punctuation 22046 . 22047) (symbol 22036 . 22046) (punctuation 22035 . 22036) (symbol 22027 . 22035) (punctuation 22026 . 22027) (punctuation 22025 . 22026) (symbol 22022 . 22025) (punctuation 22020 . 22021) (punctuation 21972 . 21973) (semantic-list 21900 . 21959) (symbol 21885 . 21900) (punctuation ">" 21928 . 21956) (symbol 21863 . 21868) (punctuation ">" 21928 . 21956) (punctuation 21862 . 21863) (punctuation 21861 . 21862) (symbol 21858 . 21861) (punctuation ">" 21928 . 21956) (semantic-list 21784 . 21841) (symbol 21769 . 21784) (punctuation 21767 . 21768) (punctuation 21751 . 21752) (symbol 21746 . 21751) (punctuation 21744 . 21745) (symbol 21740 . 21744) (punctuation 21739 . 21740) (punctuation 21738 . 21739) (punctuation 21737 . 21738) (symbol 21717 . 21737) (punctuation 21716 . 21717) (symbol 21710 . 21716) (punctuation 21709 . 21710) (punctuation 21708 . 21709) (symbol 21705 . 21708) (TYPENAME 21696 . 21704) (punctuation 21695 . 21696) (symbol 21688 . 21695) (punctuation 21670 . 21671) (symbol 21666 . 21670) (punctuation 21665 . 21666) (punctuation 21664 . 21665) (symbol 21661 . 21664) (punctuation 20932 . 20933) (symbol 20929 . 20932) (punctuation 20928 . 20929) (punctuation 20927 . 20928) (symbol 20924 . 20927) (punctuation 20922 . 20923) (symbol 20905 . 20915) (STRUCT 20898 . 20904) (punctuation 20892 . 20893) (symbol 20872 . 20892) (CLASS 20866 . 20871) (punctuation 20865 . 20866) (TEMPLATE 20856 . 20864) (punctuation 20371 . 20372) (punctuation 20370 . 20371) (semantic-list #("(n, BOOST_PARAMETER_right_angle, _)" 0 1 (macros (("parameter_spec" symbol "make_deduced_items" 20342 . 20360) ("make" symbol "aux" 20337 . 20340) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 20310 . 20335)))) 20266 . 20370) (symbol "BOOST_PP_REPEAT" 20266 . 20370) (punctuation ">" 20266 . 20370) (symbol "void_" 20266 . 20370) (punctuation "<" 20266 . 20370) (symbol "identity" 20266 . 20370) (punctuation ":" 20266 . 20370) (punctuation ":" 20266 . 20370) (symbol "mpl" 20266 . 20370) (semantic-list #("(                                                                  \\
      n, BOOST_PARAMETER_make_deduced_list, (make)(parameter_spec))" 0 1 (macros (("parameter_spec" symbol "make_deduced_items" 20342 . 20360) ("make" symbol "aux" 20337 . 20340) ("n" symbol "BOOST_PARAMETER_MAX_ARITY" 20310 . 20335)))) 20266 . 20370) (symbol "BOOST_PP_REPEAT" 20266 . 20370) (TYPENAME 20257 . 20265) (TYPEDEF 20249 . 20256) (punctuation 20185 . 20186) (semantic-list 20123 . 20184) (symbol 20102 . 20123) (punctuation 20100 . 20101) (symbol 20093 . 20096) (CLASS 20087 . 20092) (punctuation 20080 . 20081) (TEMPLATE 20072 . 20080) (punctuation 17599 . 17600) (symbol 17595 . 17599) (punctuation 17594 . 17595) (punctuation 17593 . 17594) (symbol 17589 . 17593) (TYPENAME 17580 . 17588) (punctuation 17578 . 17579) (symbol 17574 . 17578) (punctuation 17573 . 17574) (symbol 17561 . 17573) (TYPEDEF 17553 . 17560) (punctuation 16955 . 16956) (symbol 16951 . 16955) (punctuation 16950 . 16951) (punctuation 16949 . 16950) (symbol 16945 . 16949) (TYPENAME 16936 . 16944) (punctuation 16934 . 16935) (symbol 16931 . 16934) (punctuation 16929 . 16930) (symbol 16925 . 16929) (punctuation 16924 . 16925) (symbol 16920 . 16924) (TYPEDEF 16912 . 16919) (punctuation 16519 . 16520) (punctuation 16518 . 16519) (punctuation 16517 . 16518) (symbol 16505 . 16510) (punctuation 16503 . 16504) (symbol 16489 . 16503) (punctuation 16487 . 16488) (symbol 16483 . 16487) (punctuation 16482 . 16483) (punctuation 16481 . 16482) (symbol 16478 . 16481) (punctuation 16476 . 16477) (symbol 16471 . 16476) (punctuation 16470 . 16471) (punctuation 16469 . 16470) (symbol 16466 . 16469) (punctuation 16464 . 16465) (symbol 16459 . 16464) (punctuation 16457 . 16458) (symbol 16446 . 16457) (punctuation 16444 . 16445) (symbol 16440 . 16444) (punctuation 16428 . 16429) (symbol 16411 . 16428) (TYPENAME 16402 . 16410) (TYPEDEF 16394 . 16401) (punctuation 16359 . 16360) (symbol 16351 . 16356) (punctuation 16350 . 16351) (punctuation 16349 . 16350) (symbol 16346 . 16349) (punctuation 16344 . 16345) (symbol 16333 . 16343) (CLASS 16327 . 16332) (punctuation 16325 . 16326) (symbol 16315 . 16320) (CLASS 16309 . 16314) (punctuation 16307 . 16308) (symbol 16291 . 16302) (CLASS 16285 . 16290) (punctuation 16283 . 16284) (symbol 16274 . 16278) (CLASS 16268 . 16273) (punctuation 16260 . 16261) (TEMPLATE 16251 . 16259) (punctuation 13981 . 13982) (punctuation 13980 . 13981) (punctuation 13979 . 13980) (symbol 13967 . 13972) (punctuation 13965 . 13966) (symbol 13943 . 13956) (punctuation 13941 . 13942) (symbol 13926 . 13932) (punctuation 13925 . 13926) (punctuation 13924 . 13925) (symbol 13912 . 13924) (TYPENAME 13903 . 13911) (punctuation 13901 . 13902) (symbol 13882 . 13892) (punctuation 13880 . 13881) (symbol 13866 . 13871) (punctuation 13864 . 13865) (symbol 13844 . 13855) (punctuation 13842 . 13843) (symbol 13829 . 13833) (punctuation 13828 . 13829) (punctuation 13827 . 13828) (symbol 13823 . 13827) (TYPENAME 13814 . 13822) (punctuation 13802 . 13803) (symbol 13785 . 13802) (TYPENAME 13776 . 13784) (TYPEDEF 13768 . 13775) (punctuation 11623 . 11624) (punctuation 11622 . 11623) (punctuation 11621 . 11622) (symbol 11607 . 11621) (punctuation 11606 . 11607) (symbol 11598 . 11606) (TYPENAME 11589 . 11597) (TYPEDEF 11581 . 11588) (punctuation 10868 . 10869) (punctuation 10867 . 10868) (punctuation 10866 . 10867) (symbol 10851 . 10859) (punctuation 10850 . 10851) (punctuation 10849 . 10850) (symbol 10843 . 10849) (TYPENAME 10834 . 10842) (punctuation 10832 . 10833) (symbol 10824 . 10832) (punctuation 10812 . 10813) (symbol 10805 . 10812) (punctuation 10804 . 10805) (punctuation 10803 . 10804) (symbol 10800 . 10803) (TYPENAME 10791 . 10799) (TYPEDEF 10783 . 10790) (punctuation 9393 . 9394) (punctuation 9392 . 9393) (punctuation 9391 . 9392) (punctuation 9383 . 9384) (symbol 9378 . 9383) (punctuation 9376 . 9377) (symbol 9368 . 9376) (punctuation 9366 . 9367) (symbol 9362 . 9366) (punctuation 9361 . 9362) (punctuation 9360 . 9361) (symbol 9349 . 9360) (TYPENAME 9340 . 9348) (punctuation 9338 . 9339) (symbol 9326 . 9338) (punctuation 9324 . 9325) (symbol 9316 . 9324) (punctuation 9315 . 9316) (symbol 9305 . 9315) (punctuation 9303 . 9304) (punctuation 9293 . 9294) (symbol 9288 . 9293) (punctuation 9286 . 9287) (symbol 9278 . 9286) (punctuation 9276 . 9277) (symbol 9272 . 9276) (punctuation 9270 . 9271) (symbol 9262 . 9270) (punctuation 9261 . 9262) (symbol 9250 . 9261) (punctuation 9248 . 9249) (symbol 9230 . 9239) (punctuation 9218 . 9219) (symbol 9211 . 9218) (punctuation 9210 . 9211) (punctuation 9209 . 9210) (symbol 9206 . 9209) (TYPENAME 9197 . 9205) (TYPEDEF 9189 . 9196) (semantic-list 9032 . 9179) (punctuation 8936 . 8937) (punctuation 8935 . 8936) (punctuation 8934 . 8935) (symbol 8915 . 8927) (punctuation 8913 . 8914) (symbol 8896 . 8904) (punctuation 8894 . 8895) (symbol 8881 . 8885) (punctuation 8880 . 8881) (punctuation 8879 . 8880) (punctuation 8878 . 8879) (symbol 8857 . 8867) (punctuation 8855 . 8856) (symbol 8846 . 8855) (punctuation 8845 . 8846) (punctuation 8844 . 8845) (symbol 8840 . 8844) (TYPENAME 8831 . 8839) (punctuation 8815 . 8816) (symbol 8809 . 8815) (punctuation 8808 . 8809) (punctuation 8807 . 8808) (symbol 8804 . 8807) (TYPENAME 8795 . 8803) (punctuation 8783 . 8784) (symbol 8772 . 8783) (punctuation 8771 . 8772) (punctuation 8770 . 8771) (symbol 8767 . 8770) (TYPENAME 8758 . 8766) (TYPEDEF 8750 . 8757) (punctuation 8289 . 8290) (symbol 8278 . 8282) (punctuation 8277 . 8278) (punctuation 8276 . 8277) (punctuation 8275 . 8276) (symbol 8271 . 8275) (punctuation 8270 . 8271) (punctuation 8269 . 8270) (punctuation 8268 . 8269) (symbol 8264 . 8268) (punctuation 8263 . 8264) (symbol 8255 . 8263) (TYPENAME 8246 . 8254) (punctuation 8244 . 8245) (symbol 8236 . 8244) (punctuation 8235 . 8236) (symbol 8228 . 8235) (punctuation 8227 . 8228) (punctuation 8226 . 8227) (symbol 8223 . 8226) (TYPENAME 8214 . 8222) (punctuation 8212 . 8213) (symbol 8199 . 8203) (punctuation 8198 . 8199) (punctuation 8197 . 8198) (punctuation 8196 . 8197) (symbol 8193 . 8196) (punctuation 8191 . 8192) (symbol 8187 . 8191) (punctuation 8186 . 8187) (punctuation 8185 . 8186) (punctuation 8184 . 8185) (symbol 8180 . 8184) (punctuation 8179 . 8180) (symbol 8171 . 8179) (TYPENAME 8162 . 8170) (punctuation 8160 . 8161) (symbol 8155 . 8160) (punctuation 8154 . 8155) (symbol 8143 . 8154) (punctuation 8142 . 8143) (punctuation 8141 . 8142) (symbol 8138 . 8141) (TYPENAME 8129 . 8137) (punctuation 8117 . 8118) (symbol 8113 . 8117) (punctuation 8112 . 8113) (punctuation 8111 . 8112) (symbol 8108 . 8111) (TYPEDEF 8100 . 8107) (punctuation 7830 . 7831) (semantic-list 7828 . 7830) (punctuation 7824 . 7825) (symbol 7813 . 7817) (punctuation 7812 . 7813) (punctuation 7811 . 7812) (punctuation 7810 . 7811) (symbol 7797 . 7810) (punctuation 7796 . 7797) (symbol 7771 . 7796) (TYPENAME 7762 . 7770) (punctuation 7760 . 7761) (symbol 7744 . 7751) (punctuation 7732 . 7733) (symbol 7723 . 7732) (punctuation 7721 . 7722) (symbol 7691 . 7716) (STRUCT 7684 . 7690) (punctuation 7680 . 7681) (symbol 7667 . 7680) (CLASS 7661 . 7666) (punctuation 7659 . 7660) (symbol 7652 . 7659) (CLASS 7646 . 7651) (punctuation 7645 . 7646) (TEMPLATE 7636 . 7644) (punctuation 6186 . 6187) (symbol 6175 . 6179) (punctuation 6174 . 6175) (punctuation 6173 . 6174) (punctuation 6172 . 6173) (symbol 6159 . 6172) (punctuation 6158 . 6159) (symbol 6147 . 6158) (TYPENAME 6138 . 6146) (punctuation 6136 . 6137) (symbol 6123 . 6127) (punctuation 6122 . 6123) (punctuation 6121 . 6122) (punctuation 6120 . 6121) (symbol 6107 . 6120) (punctuation 6106 . 6107) (symbol 6097 . 6106) (TYPENAME 6088 . 6096) (punctuation 6086 . 6087) (symbol 6073 . 6077) (punctuation 6072 . 6073) (punctuation 6071 . 6072) (punctuation 6070 . 6071) (symbol 6057 . 6070) (punctuation 6056 . 6057) (symbol 6048 . 6056) (TYPENAME 6039 . 6047) (punctuation 6027 . 6028) (symbol 6005 . 6027) (TYPEDEF 5997 . 6004) (punctuation 5402 . 5403) (punctuation 5401 . 5402) (punctuation 5400 . 5401) (symbol 5391 . 5400) (punctuation 5390 . 5391) (punctuation 5389 . 5390) (symbol 5388 . 5389) (TYPENAME 5379 . 5387) (punctuation 5378 . 5379) (symbol 5354 . 5378) (TYPENAME 5335 . 5343) (TYPEDEF 5327 . 5334) (punctuation 4689 . 4690) (semantic-list 4687 . 4689) (punctuation 4683 . 4684) (punctuation 4675 . 4676) (symbol 4667 . 4675) (punctuation 4666 . 4667) (punctuation 4665 . 4666) (symbol 4664 . 4665) (TYPENAME 4655 . 4663) (punctuation 4654 . 4655) (symbol 4646 . 4654) (punctuation 4645 . 4646) (punctuation 4644 . 4645) (symbol 4641 . 4644) (punctuation 4639 . 4640) (punctuation 4629 . 4630) (symbol 4621 . 4629) (punctuation 4620 . 4621) (punctuation 4619 . 4620) (symbol 4618 . 4619) (TYPENAME 4609 . 4617) (punctuation 4608 . 4609) (symbol 4595 . 4608) (punctuation 4593 . 4594) (punctuation 4583 . 4584) (symbol 4575 . 4583) (punctuation 4574 . 4575) (punctuation 4573 . 4574) (symbol 4572 . 4573) (TYPENAME 4563 . 4571) (punctuation 4562 . 4563) (symbol 4548 . 4562) (punctuation 4536 . 4537) (symbol 4529 . 4536) (punctuation 4528 . 4529) (punctuation 4527 . 4528) (symbol 4524 . 4527) (punctuation 4522 . 4523) (symbol 4505 . 4517) (STRUCT 4498 . 4504) (punctuation 4494 . 4495) (symbol 4493 . 4494) (CLASS 4487 . 4492) (punctuation 4486 . 4487) (TEMPLATE 4477 . 4485) (punctuation 3729 . 3730) (punctuation 3728 . 3729) (punctuation 3727 . 3728) (symbol 3712 . 3720) (punctuation 3711 . 3712) (punctuation 3710 . 3711) (symbol 3709 . 3710) (TYPENAME 3700 . 3708) (punctuation 3688 . 3689) (symbol 3674 . 3688) (punctuation 3672 . 3673) (symbol 3656 . 3667) (STRUCT 3649 . 3655) (punctuation 3645 . 3646) (symbol 3644 . 3645) (CLASS 3638 . 3643) (punctuation 3637 . 3638) (TEMPLATE 3628 . 3636) (semantic-list 3599 . 3624) (symbol 3576 . 3599) (number 3622 . 3623) (semantic-list 3550 . 3573) (symbol 3527 . 3550) (number 3571 . 3572) (semantic-list 3501 . 3524) (symbol 3478 . 3501) (number 3522 . 3523) (punctuation 3170 . 3171) (symbol 3159 . 3170) (punctuation 3158 . 3159) (punctuation 3157 . 3158) (symbol 3154 . 3157) (punctuation 3152 . 3153) (symbol 3142 . 3151) (CLASS 3136 . 3141) (punctuation 3134 . 3135) (symbol 3131 . 3134) (CLASS 3125 . 3130) (punctuation 3124 . 3125) (TEMPLATE 3115 . 3123) (punctuation 3032 . 3033) (symbol 3021 . 3032) (punctuation 3020 . 3021) (punctuation 3019 . 3020) (symbol 3016 . 3019) (punctuation 3014 . 3015) (symbol 3004 . 3013) (CLASS 2998 . 3003) (punctuation 2996 . 2997) (symbol 2993 . 2996) (CLASS 2987 . 2992) (punctuation 2986 . 2987) (TEMPLATE 2977 . 2985) (semantic-list 1993 . 2017))
      :lexical-table 
        '(("BOOST_PARAMETER_make_arg_list" (spp-arg-list ("z" "n" "names") 18194 . 18207) . 
              ((symbol "BOOST_PP_SEQ_ELEM" 18221 . 18238) (semantic-list "(0,names)" 18238 . 18247) (punctuation "<" 18247 . 18248) (symbol "BOOST_PP_CAT" 18283 . 18295) (semantic-list "(BOOST_PP_SEQ_ELEM(1,names), n)" 18295 . 18326) (punctuation "," 18326 . 18327) (symbol "BOOST_PP_CAT" 18341 . 18353) (semantic-list "(BOOST_PP_SEQ_ELEM(2,names), n)" 18353 . 18384) (punctuation "," 18384 . 18385)))
          ("BOOST_PARAMETER_FORWARD_TYPEDEF" (spp-arg-list ("z" "i" "names") 19743 . 19756) . 
              ((TYPEDEF "typedef" 19763 . 19770) (symbol "BOOST_PP_CAT" 19771 . 19783) (semantic-list "(BOOST_PP_SEQ_ELEM(0,names),i)" 19783 . 19813) (symbol "BOOST_PP_CAT" 19814 . 19826) (semantic-list "(BOOST_PP_SEQ_ELEM(1,names),i)" 19826 . 19856) (punctuation ";" 19856 . 19857)))
          ("BOOST_PARAMETER_FORWARD_TYPEDEFS" (spp-arg-list ("n" "src" "dest") 19899 . 19913) . ((symbol "BOOST_PP_REPEAT" 19920 . 19935) (semantic-list "(n, BOOST_PARAMETER_FORWARD_TYPEDEF, (src)(dest))" 19935 . 19984)))
          ("BOOST_PARAMETER_right_angle" (spp-arg-list ("z" "n" "text") 18423 . 18435) . ((punctuation ">" 18436 . 18437)))
          ("BOOST_PARAMETERS_031014_HPP")
          ("BOOST_PARAMETER_build_arg_list" (spp-arg-list ("n" "make" "parameter_spec" "argument_type") 18477 . 18517) . 
              ((symbol "BOOST_PP_REPEAT" 18527 . 18542) (semantic-list "(                                                                  \\
      n, BOOST_PARAMETER_make_arg_list, (make)(parameter_spec)(argument_type))" 18542 . 18689) (symbol "mpl" 18703 . 18706) (punctuation ":" 18706 . 18707) (punctuation ":" 18707 . 18708) (symbol "identity" 18708 . 18716) (punctuation "<" 18716 . 18717) (symbol "void_" 18717 . 18722) (punctuation ">" 18722 . 18723) (symbol "BOOST_PP_REPEAT" 18785 . 18800) (semantic-list "(n, BOOST_PARAMETER_right_angle, _)" 18800 . 18835)))
          ("BOOST_PARAMETER_make_deduced_list" (spp-arg-list ("z" "n" "names") 18878 . 18891) . 
              ((symbol "BOOST_PP_SEQ_ELEM" 18901 . 18918) (semantic-list "(0,names)" 18918 . 18927) (punctuation "<" 18927 . 18928) (symbol "BOOST_PP_CAT" 18963 . 18975) (semantic-list "(BOOST_PP_SEQ_ELEM(1,names), n)" 18975 . 19006) (punctuation "," 19006 . 19007)))
          ("BOOST_PP_ITERATION_PARAMS_1" . ((semantic-list "(3,( \\
        3,BOOST_PARAMETER_MAX_ARITY,<boost/parameter/aux_/overloads.hpp> \\
    ))" 26835 . 26923)))
          ("BOOST_PARAMETER_build_deduced_list" (spp-arg-list ("n" "make" "parameter_spec") 19051 . 19076) . 
              ((symbol "BOOST_PP_REPEAT" 19097 . 19112) (semantic-list "(                                                                  \\
      n, BOOST_PARAMETER_make_deduced_list, (make)(parameter_spec))" 19112 . 19248) (symbol "mpl" 19269 . 19272) (punctuation ":" 19272 . 19273) (punctuation ":" 19273 . 19274) (symbol "identity" 19274 . 19282) (punctuation "<" 19282 . 19283) (symbol "void_" 19283 . 19288) (punctuation ">" 19288 . 19289) (symbol "BOOST_PP_REPEAT" 19355 . 19370) (semantic-list "(n, BOOST_PARAMETER_right_angle, _)" 19370 . 19405)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("KEYWORD_050328_HPP" variable (:constant-flag t) nil [273 291])
            ("boost/parameter/aux_/unwrap_cv_reference.hpp" include (:system-flag t) nil [293 348])
            ("boost/parameter/aux_/tag.hpp" include (:system-flag t) nil [349 388])
            ("boost/parameter/aux_/default.hpp" include (:system-flag t) nil [389 432])
            ("boost" type
               (:members 
                  ( ("parameter" type
                       (:members 
                          ( ("keyword" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("=" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("aux::tag::type" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("x" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [940 945]))                                          
                                        :typemodifiers ("typename")
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [865 1045])
                                    ("|" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::default_" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1122 1140]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1051 1212])
                                    ("||" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::lazy_default" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1294 1312]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1218 1388])
                                    ("=" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("aux::tag::type" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("x" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1549 1560]))                                          
                                        :typemodifiers ("typename")
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1468 1666])
                                    ("|" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::default_" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type (:constant-flag t) nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [1831 1855]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [1754 2000])
                                    ("||" function
                                       (:template 
                                          ( ("Default" type (:type "class") nil nil))                                          
                                        :type ("aux::lazy_default" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("Default" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :arguments 
                                          ( ("default_" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Default" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2082 2106]))                                          
                                        :operator-flag t
                                        :methodconst-flag t)
                                        (reparse-symbol classsubparts) [2006 2249])
                                    ("public" label nil (reparse-symbol classsubparts) [2259 2266])
                                    ("instance" variable
                                       (:typemodifiers ("static")
                                        :type ("keyword" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [2639 2674])
                                    ("get" function
                                       (:typemodifiers ("static")
                                        :type ("keyword" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [2716 2806]))                                  )
                                (reparse-symbol namespacesubparts) [823 2809])
                            ("keyword::instance" variable
                               (:default-value "{}"
                                :type ("keyword" type
                                     (:template-specifier 
                                        ( ("Tag" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol namespacesubparts) [2811 2879])
                            ("BOOST_PARAMETER_KEYWORD" variable (:constant-flag t) (reparse-symbol namespacesubparts) [4181 4204]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [452 5239]))                  
                :type "namespace")
                nil [434 5240]))          
      :file "keyword.hpp"
      :pointmax 5302
      :fsize 5301
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("KEYWORD_050328_HPP")
          ("BOOST_PARAMETER_KEYWORD" (spp-arg-list ("tag_namespace" "name") 4204 . 4224) . 
              ((NAMESPACE "namespace" 4247 . 4256) (symbol "tag_namespace" 4257 . 4270) (semantic-list "{                                                               \\
      struct name                                                   \\
      {                                                             \\
          static char const* keyword_name()                         \\
          {                                                         \\
              return #name;                                         \\
          }                                                         \\
      };                                                            \\
    }" 4317 . 4878) (NAMESPACE "namespace" 4947 . 4956) (semantic-list "{                                                               \\
       ::boost::parameter::keyword<tag_namespace::name> const& name \\
       = ::boost::parameter::keyword<tag_namespace::name>::instance;\\
    }" 5017 . 5228)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_BINDING_DWA200558_HPP" variable (:constant-flag t) nil [243 280])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [282 313])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [314 346])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [347 376])
            ("boost/parameter/aux_/result_of0.hpp" include (:system-flag t) nil [377 424])
            ("boost/parameter/aux_/void.hpp" include (:system-flag t) nil [425 466])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [467 508])
            ("boost" type
               (:members 
                  ( ("parameter" type
                       (:members 
                          ( ("binding" type
                               (:template 
                                  ( ("Parameters" type (:type "class") nil nil)
                                    ("Keyword" type (:type "class") nil nil)
                                    ("Default" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1813 1823])
                                    ("BOOST_MPL_ASSERT_NOT" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [1829 1957]))                                  )
                                (reparse-symbol namespacesubparts) [1266 2093])
                            ("lazy_binding" type
                               (:template 
                                  ( ("Parameters" type (:type "class") nil nil)
                                    ("Keyword" type (:type "class") nil nil)
                                    ("DefaultFn" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2921 2931]))                                  )
                                (reparse-symbol namespacesubparts) [2683 2934]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [614 2938]))                  
                :type "namespace")
                nil [596 2939]))          
      :file "binding.hpp"
      :pointmax 3019
      :fsize 3018
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax '((punctuation 2920 . 2921) (punctuation 2919 . 2920) (punctuation 2918 . 2919) (symbol 2910 . 2915) (punctuation 2909 . 2910) (punctuation 2908 . 2909) (symbol 2905 . 2908) (punctuation 2903 . 2904) (symbol 2894 . 2898) (punctuation 2893 . 2894) (punctuation 2892 . 2893) (punctuation 2891 . 2892) (symbol 2882 . 2891) (punctuation 2881 . 2882) (symbol 2871 . 2881) (punctuation 2870 . 2871) (punctuation 2869 . 2870) (symbol 2866 . 2869) (TYPENAME 2857 . 2865) (punctuation 2855 . 2856) (symbol 2843 . 2850) (punctuation 2841 . 2842) (symbol 2829 . 2836) (punctuation 2828 . 2829) (punctuation 2827 . 2828) (symbol 2817 . 2827) (TYPENAME 2808 . 2816) (punctuation 2800 . 2801) (symbol 2789 . 2800) (punctuation 2788 . 2789) (punctuation 2787 . 2788) (symbol 2784 . 2787) (TYPENAME 2775 . 2783) (TYPEDEF 2767 . 2774) (semantic-list 2042 . 2082) (symbol 2014 . 2042) (semantic-list 2053 . 2081) (number 2043 . 2044) (semantic-list 1850 . 1955) (punctuation 1812 . 1813) (punctuation 1811 . 1812) (punctuation 1810 . 1811) (symbol 1800 . 1805) (punctuation 1799 . 1800) (punctuation 1798 . 1799) (symbol 1795 . 1798) (punctuation 1794 . 1795) (symbol 1787 . 1794) (punctuation 1786 . 1787) (symbol 1779 . 1786) (punctuation 1778 . 1779) (symbol 1771 . 1778) (punctuation 1770 . 1771) (punctuation 1769 . 1770) (symbol 1759 . 1769) (TYPENAME 1750 . 1758) (punctuation 1740 . 1741) (symbol 1729 . 1740) (punctuation 1728 . 1729) (punctuation 1727 . 1728) (symbol 1724 . 1727) (TYPENAME 1715 . 1723) (TYPEDEF 1707 . 1714))
      :lexical-table 
        '(("BOOST_PARAMETER_BINDING_DWA200558_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_VALUE_TYPE_060921_HPP" variable (:constant-flag t) nil [274 311])
            ("boost/mpl/apply.hpp" include (:system-flag t) nil [313 344])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [345 377])
            ("boost/mpl/and.hpp" include (:system-flag t) nil [378 407])
            ("boost/parameter/aux_/result_of0.hpp" include (:system-flag t) nil [408 455])
            ("boost/parameter/aux_/void.hpp" include (:system-flag t) nil [456 497])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [498 539])
            ("boost" type
               (:members 
                  ( ("parameter" type
                       (:members 
                          ( ("value_type" type
                               (:template 
                                  ( ("Parameters" type (:type "class") nil nil)
                                    ("Keyword" type (:type "class") nil nil)
                                    ("Default" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1858 1868])
                                    ("BOOST_MPL_ASSERT_NOT" function
                                       (:prototype-flag t
                                        :type "int")
                                        (reparse-symbol classsubparts) [1874 2002]))                                  )
                                (reparse-symbol namespacesubparts) [1301 2141])
                            ("lazy_value_type" type
                               (:template 
                                  ( ("Parameters" type (:type "class") nil nil)
                                    ("Keyword" type (:type "class") nil nil)
                                    ("DefaultFn" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2982 2992]))                                  )
                                (reparse-symbol namespacesubparts) [2740 2995]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [645 2999]))                  
                :type "namespace")
                nil [627 3000]))          
      :file "value_type.hpp"
      :pointmax 3081
      :fsize 3080
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax '((punctuation 2981 . 2982) (punctuation 2980 . 2981) (punctuation 2979 . 2980) (symbol 2970 . 2976) (punctuation 2969 . 2970) (punctuation 2968 . 2969) (symbol 2965 . 2968) (punctuation 2963 . 2964) (symbol 2954 . 2958) (punctuation 2953 . 2954) (punctuation 2952 . 2953) (punctuation 2951 . 2952) (symbol 2942 . 2951) (punctuation 2941 . 2942) (symbol 2931 . 2941) (punctuation 2930 . 2931) (punctuation 2929 . 2930) (symbol 2926 . 2929) (TYPENAME 2917 . 2925) (punctuation 2915 . 2916) (symbol 2903 . 2910) (punctuation 2901 . 2902) (symbol 2889 . 2896) (punctuation 2888 . 2889) (punctuation 2887 . 2888) (symbol 2877 . 2887) (TYPENAME 2868 . 2876) (punctuation 2860 . 2861) (symbol 2849 . 2860) (punctuation 2848 . 2849) (punctuation 2847 . 2848) (symbol 2844 . 2847) (TYPENAME 2835 . 2843) (TYPEDEF 2827 . 2834) (semantic-list 2087 . 2130) (symbol 2059 . 2087) (semantic-list 2101 . 2129) (number 2088 . 2089) (semantic-list 1895 . 2000) (punctuation 1857 . 1858) (punctuation 1856 . 1857) (punctuation 1855 . 1856) (symbol 1844 . 1850) (punctuation 1843 . 1844) (punctuation 1842 . 1843) (symbol 1839 . 1842) (punctuation 1838 . 1839) (symbol 1831 . 1838) (punctuation 1830 . 1831) (symbol 1823 . 1830) (punctuation 1822 . 1823) (symbol 1815 . 1822) (punctuation 1814 . 1815) (punctuation 1813 . 1814) (symbol 1803 . 1813) (TYPENAME 1794 . 1802) (punctuation 1784 . 1785) (symbol 1773 . 1784) (punctuation 1772 . 1773) (punctuation 1771 . 1772) (symbol 1768 . 1771) (TYPENAME 1759 . 1767) (TYPEDEF 1751 . 1758))
      :lexical-table 
        '(("BOOST_PARAMETER_VALUE_TYPE_060921_HPP")
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_MACROS_050412_HPP" variable (:constant-flag t) nil [291 324])
            ("boost/preprocessor/tuple/elem.hpp" include (:system-flag t) nil [326 370])
            ("boost/preprocessor/repetition/repeat_from_to.hpp" include (:system-flag t) nil [371 430])
            ("boost/preprocessor/arithmetic/inc.hpp" include (:system-flag t) nil [431 479])
            ("boost/preprocessor/logical/bool.hpp" include (:system-flag t) nil [480 526])
            ("boost/preprocessor/punctuation/comma_if.hpp" include (:system-flag t) nil [527 581])
            ("boost/preprocessor/control/expr_if.hpp" include (:system-flag t) nil [582 631])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [632 688])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [689 752])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [753 790])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [791 829])
            ("BOOST_PARAMETER_FUN_TEMPLATE_HEAD1" variable (:constant-flag t) nil [839 873])
            ("BOOST_PARAMETER_FUN_TEMPLATE_HEAD0" variable (:constant-flag t) nil [935 969])
            ("BOOST_PARAMETER_MATCH_TYPE" variable (:constant-flag t) nil [1076 1102])
            ("BOOST_PARAMETER_FUN_DECL" variable (:constant-flag t) nil [1397 1421])
            ("BOOST_PARAMETER_FUN" variable (:constant-flag t) nil [3336 3355])
            ("BOOST_PARAMETER_MEMFUN" variable (:constant-flag t) nil [4175 4197]))          
      :file "macros.hpp"
      :pointmax 4793
      :fsize 4792
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_PARAMETER_MEMFUN" (spp-arg-list ("ret" "name" "lo" "hi" "parameters") 4197 . 4228) . 
              ((symbol "BOOST_PP_REPEAT_FROM_TO" 4343 . 4366) (semantic-list "(                                                        \\
        lo, BOOST_PP_INC(hi), BOOST_PARAMETER_FUN_DECL, (ret, name, parameters))" 4366 . 4505) (TEMPLATE "template" 4601 . 4609) (punctuation "<" 4609 . 4610) (CLASS "class" 4610 . 4615) (symbol "Params" 4616 . 4622) (punctuation ">" 4622 . 4623) (symbol "ret" 4687 . 4690) (symbol "BOOST_PP_CAT" 4691 . 4703) (semantic-list "(name, _with_named_params)" 4703 . 4729) (semantic-list "(Params const& p)" 4729 . 4746)))
          ("BOOST_PARAMETER_FUN_TEMPLATE_HEAD0" (spp-arg-list ("n") 969 . 972))
          ("BOOST_PARAMETER_MACROS_050412_HPP")
          ("BOOST_PARAMETER_FUN_TEMPLATE_HEAD1" (spp-arg-list ("n") 873 . 876) . 
              ((TEMPLATE "template" 883 . 891) (punctuation "<" 891 . 892) (symbol "BOOST_PP_ENUM_PARAMS" 892 . 912) (semantic-list "(n, class T)" 912 . 924) (punctuation ">" 924 . 925)))
          ("BOOST_PARAMETER_FUN_DECL" (spp-arg-list ("z" "n" "params") 1421 . 1435) . 
              ((symbol "BOOST_PP_CAT" 1565 . 1577) (semantic-list "(BOOST_PARAMETER_FUN_TEMPLATE_HEAD, BOOST_PP_BOOL(n))" 1577 . 1630) (semantic-list "(n)" 1630 . 1633) (symbol "BOOST_PP_TUPLE_ELEM" 1737 . 1756) (semantic-list "(3, 0, params)" 1756 . 1770) (symbol "BOOST_PP_TUPLE_ELEM" 1827 . 1846) (semantic-list "(3, 1, params)" 1846 . 1860) (semantic-list "(                                          \\
            BOOST_PP_ENUM_BINARY_PARAMS(n, T, const& p)                             \\
            BOOST_PP_COMMA_IF(n)                                                    \\
            BOOST_PARAMETER_MATCH_TYPE(n,BOOST_PP_TUPLE_ELEM(3, 2, params))         \\
            kw = BOOST_PP_TUPLE_ELEM(3, 2, params)()                                \\
        )" 1860 . 2258) (semantic-list "{                                                                               \\
        return BOOST_PP_CAT(BOOST_PP_TUPLE_ELEM(3, 1, params), _with_named_params)( \\
            kw(BOOST_PP_ENUM_PARAMS(n, p))                                          \\
        );                                                                          \\
    }" 2339 . 2684)))
          ("BOOST_PARAMETER_FUN" (spp-arg-list ("ret" "name" "lo" "hi" "parameters") 3355 . 3386) . 
              ((TEMPLATE "template" 3504 . 3512) (punctuation "<" 3512 . 3513) (CLASS "class" 3513 . 3518) (symbol "Params" 3519 . 3525) (punctuation ">" 3525 . 3526) (symbol "ret" 3590 . 3593) (symbol "BOOST_PP_CAT" 3594 . 3606) (semantic-list "(name, _with_named_params)" 3606 . 3632) (semantic-list "(Params const& p)" 3632 . 3649) (punctuation ";" 3649 . 3650) (symbol "BOOST_PP_REPEAT_FROM_TO" 3762 . 3785) (semantic-list "(                                                        \\
        lo, BOOST_PP_INC(hi), BOOST_PARAMETER_FUN_DECL, (ret, name, parameters))" 3785 . 3924) (TEMPLATE "template" 4020 . 4028) (punctuation "<" 4028 . 4029) (CLASS "class" 4029 . 4034) (symbol "Params" 4035 . 4041) (punctuation ">" 4041 . 4042) (symbol "ret" 4106 . 4109) (symbol "BOOST_PP_CAT" 4110 . 4122) (semantic-list "(name, _with_named_params)" 4122 . 4148) (semantic-list "(Params const& p)" 4148 . 4165)))
          ("BOOST_PARAMETER_MATCH_TYPE" (spp-arg-list ("n" "param") 1102 . 1112) . 
              ((symbol "BOOST_PP_EXPR_IF" 1137 . 1153) (semantic-list "(n, typename)" 1153 . 1166) (symbol "param" 1167 . 1172) (punctuation ":" 1172 . 1173) (punctuation ":" 1173 . 1174) (symbol "match" 1174 . 1179) (punctuation "<" 1195 . 1196) (symbol "BOOST_PP_ENUM_PARAMS" 1257 . 1277) (semantic-list "(n, T)" 1277 . 1283) (punctuation ">" 1311 . 1312) (punctuation ":" 1312 . 1313) (punctuation ":" 1313 . 1314) (symbol "type" 1314 . 1318)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_MATCH_DWA2005714_HPP" variable (:constant-flag t) nil [242 278])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [280 319])
            ("boost/preprocessor/seq/enum.hpp" include (:system-flag t) nil [320 363])
            ("BOOST_PARAMETER_SEQ_ENUM" variable (:constant-flag t) nil [696 720])
            ("BOOST_PARAMETER_MATCH_DEFAULTS" variable (:constant-flag t) nil [1566 1596])
            ("BOOST_PARAMETER_MATCH" variable (:constant-flag t) nil [1772 1793]))          
      :file "match.hpp"
      :pointmax 2111
      :fsize 2110
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_PARAMETER_MATCH_DWA2005714_HPP")
          ("BOOST_PARAMETER_MATCH_DEFAULTS" (spp-arg-list ("ArgTypes") 1596 . 1606))
          ("BOOST_PARAMETER_MATCH" (spp-arg-list ("ParameterSpec" "ArgTypes" "name") 1793 . 1824) . 
              ((TYPENAME "typename" 1833 . 1841) (symbol "ParameterSpec" 1842 . 1855) (punctuation ":" 1856 . 1857) (punctuation ":" 1857 . 1858) (symbol "match" 1858 . 1863) (punctuation "<" 1863 . 1864) (symbol "BOOST_PARAMETER_SEQ_ENUM" 1903 . 1927) (semantic-list "(ArgTypes)" 1927 . 1937) (symbol "BOOST_PARAMETER_MATCH_DEFAULTS" 1969 . 1999) (semantic-list "(ArgTypes)" 1999 . 2009) (punctuation ">" 2031 . 2032) (punctuation ":" 2032 . 2033) (punctuation ":" 2033 . 2034) (symbol "type" 2034 . 2038) (symbol "name" 2039 . 2043) (punctuation "=" 2044 . 2045) (symbol "ParameterSpec" 2046 . 2059) (semantic-list "()" 2060 . 2062)))
          ("BOOST_PARAMETER_SEQ_ENUM" (spp-arg-list ("seq") 720 . 725) . ((symbol "BOOST_PP_SEQ_ENUM" 726 . 743) (semantic-list "(seq)" 743 . 748)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_NAME_060806_HPP" variable (:constant-flag t) nil [268 299])
            ("boost/parameter/keyword.hpp" include (:system-flag t) nil [301 340])
            ("boost/parameter/value_type.hpp" include (:system-flag t) nil [341 383])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [384 423])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [424 462])
            ("boost/preprocessor/stringize.hpp" include (:system-flag t) nil [463 507])
            ("boost/preprocessor/control/iif.hpp" include (:system-flag t) nil [508 554])
            ("boost/preprocessor/tuple/eat.hpp" include (:system-flag t) nil [555 599])
            ("boost/preprocessor/tuple/elem.hpp" include (:system-flag t) nil [600 645])
            ("boost/mpl/placeholders.hpp" include (:system-flag t) nil [646 684])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [839 879])
            ("boost/mpl/lambda.hpp" include (:system-flag t) nil [880 913])
            ("boost" type
               (:members 
                  ( ("parameter" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("lambda_tag" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1006 1024])
                                    ("name_tag_base" type (:type "struct") (reparse-symbol namespacesubparts) [1026 1050])
                                    ("name_tag" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1052 1092])
                                    ("is_name_tag" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1094 1151]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [955 1154]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [933 1155]))                  
                :type "namespace")
                nil [915 1156])
            ("boost" type
               (:members 
                  ( ("mpl" type (:type "namespace") (reparse-symbol namespacesubparts) [1211 1514]))                  
                :type "namespace")
                nil [1193 1515])
            ("boost/preprocessor/detail/is_binary.hpp" include (:system-flag t) nil [1944 1996])
            ("BOOST_PARAMETER_IS_BINARY" variable (:constant-flag t) nil [2007 2032])
            ("BOOST_PARAMETER_NAME_OBJECT" variable (:constant-flag t) nil [2319 2346])
            ("BOOST_PARAMETER_BASIC_NAME" variable (:constant-flag t) nil [2683 2709])
            ("BOOST_PARAMETER_COMPLEX_NAME_TUPLE1" variable (:constant-flag t) nil [4072 4107])
            ("BOOST_PARAMETER_COMPLEX_NAME_TUPLE" variable (:constant-flag t) nil [4167 4201])
            ("BOOST_PARAMETER_COMPLEX_NAME_TAG" variable (:constant-flag t) nil [4312 4344])
            ("BOOST_PARAMETER_COMPLEX_NAME_NAMESPACE" variable (:constant-flag t) nil [4455 4493])
            ("BOOST_PARAMETER_COMPLEX_NAME" variable (:constant-flag t) nil [4598 4626])
            ("BOOST_PARAMETER_SIMPLE_NAME" variable (:constant-flag t) nil [5024 5051])
            ("BOOST_PARAMETER_NAME" variable (:constant-flag t) nil [5160 5180])
            ("BOOST_PARAMETER_TEMPLATE_KEYWORD" variable (:constant-flag t) nil [5587 5619]))          
      :file "name.hpp"
      :pointmax 6257
      :fsize 6256
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax '((punctuation 1510 . 1511) (semantic-list 1380 . 1510) (punctuation 1378 . 1379) (symbol 1373 . 1377) (punctuation 1372 . 1373) (punctuation 1371 . 1372) (punctuation 1370 . 1371) (symbol 1355 . 1365) (punctuation 1354 . 1355) (punctuation 1353 . 1354) (symbol 1350 . 1353) (punctuation 1349 . 1350) (punctuation 1348 . 1349) (symbol 1339 . 1348) (punctuation 1337 . 1338) (punctuation 1336 . 1337) (symbol 1335 . 1336) (punctuation 1334 . 1335) (symbol 1323 . 1334) (punctuation 1322 . 1323) (punctuation 1321 . 1322) (symbol 1318 . 1321) (punctuation 1317 . 1318) (punctuation 1316 . 1317) (symbol 1307 . 1316) (punctuation 1297 . 1298) (symbol 1288 . 1297) (punctuation 1287 . 1288) (punctuation 1286 . 1287) (symbol 1281 . 1286) (TYPENAME 1272 . 1280) (punctuation 1270 . 1271) (symbol 1266 . 1267) (punctuation 1260 . 1261) (symbol 1254 . 1260) (STRUCT 1247 . 1253) (punctuation 1245 . 1246) (symbol 1244 . 1245) (CLASS 1238 . 1243) (punctuation 1237 . 1238) (TEMPLATE 1228 . 1236) (semantic-list 799 . 837) (symbol 783 . 799) (semantic-list 829 . 836) (punctuation 782 . 783) (punctuation 780 . 781) (punctuation 779 . 780) (semantic-list 732 . 774) (symbol 725 . 732) (punctuation 724 . 725) (punctuation 722 . 723) (punctuation 721 . 722))
      :lexical-table 
        '(("BOOST_PARAMETER_COMPLEX_NAME_TAG" (spp-arg-list ("name") 4344 . 4350) . ((symbol "BOOST_PP_TUPLE_ELEM" 4377 . 4396) (semantic-list "(2, 0, BOOST_PARAMETER_COMPLEX_NAME_TUPLE(name))" 4396 . 4444)))
          ("BOOST_PARAMETER_BASIC_NAME" (spp-arg-list ("tag_namespace" "tag" "name") 2709 . 2735) . 
              ((NAMESPACE "namespace" 2748 . 2757) (symbol "tag_namespace" 2758 . 2771) (semantic-list "{                                                               \\
      struct tag                                                    \\
      {                                                             \\
          static char const* keyword_name()                         \\
          {                                                         \\
              return BOOST_PP_STRINGIZE(tag);                       \\
          }                                                         \\
                                                                    \\
          typedef boost::parameter::value_type<                     \\
              boost::mpl::_2, tag, boost::parameter::void_          \\
          > _;                                                      \\
                                                                    \\
          typedef boost::parameter::value_type<                     \\
              boost::mpl::_2, tag, boost::parameter::void_          \\
          > _1;                                                     \\
      };                                                            \\
    }" 2818 . 3939) (symbol "BOOST_PARAMETER_NAME_OBJECT" 4008 . 4035) (semantic-list "(tag_namespace::tag, name)" 4035 . 4061)))
          ("BOOST_PARAMETER_NAME_060806_HPP")
          ("BOOST_PARAMETER_IS_BINARY" (spp-arg-list ("x") 2032 . 2035) . ((symbol "BOOST_PP_IS_BINARY" 2036 . 2054) (semantic-list "(x)" 2054 . 2057)))
          ("BOOST_PARAMETER_NAME_OBJECT" (spp-arg-list ("tag" "name") 2346 . 2357) . ((NAMESPACE "namespace" 2383 . 2392) (semantic-list "{                                                               \\
       ::boost::parameter::keyword<tag> const& name                 \\
       = ::boost::parameter::keyword<tag>::instance;                \\
    }" 2453 . 2664)))
          ("BOOST_PARAMETER_COMPLEX_NAME_TUPLE1" (spp-arg-list ("tag" "namespace") 4107 . 4122) . 
              ((semantic-list "(tag, namespace)" 4137 . 4153) (punctuation "," 4153 . 4154) (punctuation "~" 4155 . 4156)))
          ("BOOST_PARAMETER_NAME" (spp-arg-list ("name") 5180 . 5186) . 
              ((symbol "BOOST_PP_IIF" 5225 . 5237) (semantic-list "(                                                   \\
        BOOST_PARAMETER_IS_BINARY(name)                             \\
      , BOOST_PARAMETER_COMPLEX_NAME                                \\
      , BOOST_PARAMETER_SIMPLE_NAME                                 \\
    )" 5237 . 5506) (semantic-list "(name)" 5506 . 5512)))
          ("BOOST_PARAMETER_COMPLEX_NAME" (spp-arg-list ("name") 4626 . 4632) . ((symbol "BOOST_PARAMETER_BASIC_NAME" 4663 . 4689) (semantic-list "(                                     \\
        BOOST_PARAMETER_COMPLEX_NAME_NAMESPACE(name)                \\
      , BOOST_PP_TUPLE_EAT(2) name                                  \\
      , BOOST_PARAMETER_COMPLEX_NAME_TAG(name)                      \\
    )" 4689 . 4944)))
          ("BOOST_PARAMETER_TEMPLATE_KEYWORD" (spp-arg-list ("name") 5619 . 5625) . 
              ((NAMESPACE "namespace" 5652 . 5661) (symbol "tag" 5662 . 5665) (semantic-list "{                                                               \\
      struct name;                                                  \\
    }" 5722 . 5863) (TEMPLATE "template" 5932 . 5940) (punctuation "<" 5941 . 5942) (CLASS "class" 5942 . 5947) (symbol "T" 5948 . 5949) (punctuation ">" 5949 . 5950) (STRUCT "struct" 6002 . 6008) (symbol "name" 6009 . 6013) (punctuation ":" 6074 . 6075) (symbol "boost" 6076 . 6081) (punctuation ":" 6081 . 6082) (punctuation ":" 6082 . 6083) (symbol "parameter" 6083 . 6092) (punctuation ":" 6092 . 6093) (punctuation ":" 6093 . 6094) (symbol "template_keyword" 6094 . 6110) (punctuation "<" 6110 . 6111) (symbol "tag" 6111 . 6114) (punctuation ":" 6114 . 6115) (punctuation ":" 6115 . 6116) (symbol "name" 6116 . 6120) (punctuation "," 6120 . 6121) (symbol "T" 6122 . 6123) (punctuation ">" 6123 . 6124) (semantic-list "{}" 6142 . 6144) (punctuation ";" 6144 . 6145)))
          ("BOOST_PARAMETER_COMPLEX_NAME_TUPLE" (spp-arg-list ("name") 4201 . 4207) . ((symbol "BOOST_PP_TUPLE_ELEM" 4232 . 4251) (semantic-list "(2, 0, (BOOST_PARAMETER_COMPLEX_NAME_TUPLE1 name))" 4251 . 4301)))
          ("BOOST_PARAMETER_SIMPLE_NAME" (spp-arg-list ("name") 5051 . 5057) . ((symbol "BOOST_PARAMETER_BASIC_NAME" 5089 . 5115) (semantic-list "(tag, name, BOOST_PP_CAT(_, name))" 5115 . 5149)))
          ("BOOST_PARAMETER_COMPLEX_NAME_NAMESPACE" (spp-arg-list ("name") 4493 . 4499) . ((symbol "BOOST_PP_TUPLE_ELEM" 4520 . 4539) (semantic-list "(2, 1, BOOST_PARAMETER_COMPLEX_NAME_TUPLE(name))" 4539 . 4587)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_PREPROCESSOR_060206_HPP" variable (:constant-flag t) nil [276 315])
            ("boost/parameter/parameters.hpp" include (:system-flag t) nil [317 359])
            ("boost/parameter/binding.hpp" include (:system-flag t) nil [360 399])
            ("boost/parameter/match.hpp" include (:system-flag t) nil [400 437])
            ("boost/parameter/aux_/parenthesized_type.hpp" include (:system-flag t) nil [439 494])
            ("boost/parameter/aux_/cast.hpp" include (:system-flag t) nil [495 536])
            ("boost/parameter/aux_/preprocessor/flatten.hpp" include (:system-flag t) nil [537 594])
            ("boost/preprocessor/repetition/repeat_from_to.hpp" include (:system-flag t) nil [596 656])
            ("boost/preprocessor/comparison/equal.hpp" include (:system-flag t) nil [657 708])
            ("boost/preprocessor/control/if.hpp" include (:system-flag t) nil [709 754])
            ("boost/preprocessor/control/iif.hpp" include (:system-flag t) nil [755 801])
            ("boost/preprocessor/control/expr_if.hpp" include (:system-flag t) nil [802 852])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [853 910])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [911 975])
            ("boost/preprocessor/repetition/enum_trailing.hpp" include (:system-flag t) nil [976 1035])
            ("boost/preprocessor/seq/first_n.hpp" include (:system-flag t) nil [1036 1082])
            ("boost/preprocessor/seq/for_each_product.hpp" include (:system-flag t) nil [1083 1138])
            ("boost/preprocessor/seq/for_each_i.hpp" include (:system-flag t) nil [1139 1188])
            ("boost/preprocessor/tuple/elem.hpp" include (:system-flag t) nil [1190 1235])
            ("boost/preprocessor/tuple/eat.hpp" include (:system-flag t) nil [1237 1281])
            ("boost/preprocessor/seq/fold_left.hpp" include (:system-flag t) nil [1282 1330])
            ("boost/preprocessor/seq/push_back.hpp" include (:system-flag t) nil [1331 1379])
            ("boost/preprocessor/seq/size.hpp" include (:system-flag t) nil [1380 1423])
            ("boost/preprocessor/seq/enum.hpp" include (:system-flag t) nil [1424 1467])
            ("boost/preprocessor/seq/push_back.hpp" include (:system-flag t) nil [1468 1516])
            ("boost/preprocessor/detail/is_nullary.hpp" include (:system-flag t) nil [1518 1570])
            ("boost/mpl/always.hpp" include (:system-flag t) nil [1572 1604])
            ("boost/mpl/apply_wrap.hpp" include (:system-flag t) nil [1605 1641])
            ("boost" type
               (:members 
                  ( ("parameter" type
                       (:members 
                          ( ("aux" type
                               (:members 
                                  ( ("unwrap_predicate" type
                                       (:template 
                                          ( ("Match" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1993 2040])
                                    ("unwrap_predicate" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("mpl::always" type
                                                     (:template-specifier 
                                                        ( ("mpl::true_" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2109 2146]))                                          
                                        :template-specifier 
                                          ( ("void" type (:pointer 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2060 2149])
                                    ("argument_pack" type
                                       (:members 
                                          ( ("result" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4608 4620])
                                            ("type" type
                                               (:typedef ("mpl::first::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4625 4672]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [4301 4675])
                                    ("as_lvalue" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("T" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4814 4823])
                                            ("" variable (:type "long") (reparse-symbol arg-sub-list) [4824 4829]))                                          )
                                        (reparse-symbol namespacesubparts) [4782 4851])
                                    ("as_lvalue" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("T" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("value" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4891 4906])
                                            ("" variable (:type "int") (reparse-symbol arg-sub-list) [4907 4911]))                                          )
                                        (reparse-symbol namespacesubparts) [4853 4933]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1763 6064]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1741 6065]))                  
                :type "namespace")
                nil [1723 6066])
            ("BOOST_PARAMETER_IS_NULLARY" variable (:constant-flag t) nil [6459 6485])
            ("BOOST_PARAMETER_MEMBER_FUNCTION_CHECK_STATIC_static" variable (:constant-flag t) nil [6530 6581])
            ("BOOST_PARAMETER_MEMBER_FUNCTION_IS_STATIC" variable (:constant-flag t) nil [6594 6635])
            ("BOOST_PARAMETER_MEMBER_FUNCTION_STRIP_STATIC_static" variable (:constant-flag t) nil [6796 6847])
            ("BOOST_PARAMETER_MEMBER_FUNCTION_STRIP_STATIC" variable (:constant-flag t) nil [6858 6902])
            ("BOOST_PARAMETER_MEMBER_FUNCTION_STATIC" variable (:constant-flag t) nil [7614 7652])
            ("BOOST_PARAMETER_MEMBER_FUNCTION_NAME" variable (:constant-flag t) nil [7776 7812])
            ("BOOST_PARAMETER_ARITY_RANGE_M_optional" variable (:constant-flag t) nil [8053 8091])
            ("BOOST_PARAMETER_ARITY_RANGE_M_deduced_optional" variable (:constant-flag t) nil [8114 8160])
            ("BOOST_PARAMETER_ARITY_RANGE_M_required" variable (:constant-flag t) nil [8183 8221])
            ("BOOST_PARAMETER_ARITY_RANGE_M_deduced_required" variable (:constant-flag t) nil [8258 8304])
            ("BOOST_PARAMETER_ARITY_RANGE_M" variable (:constant-flag t) nil [8342 8371])
            ("BOOST_PARAMETER_ARITY_RANGE" variable (:constant-flag t) nil [8522 8549])
            ("BOOST_PARAMETER_FN_ARG_QUALIFIER" variable (:constant-flag t) nil [8757 8789])
            ("BOOST_PARAMETER_FN_ARG_NAME" variable (:constant-flag t) nil [8841 8868])
            ("BOOST_PARAMETER_FN_ARG_PRED" variable (:constant-flag t) nil [8920 8947])
            ("BOOST_PARAMETER_FN_ARG_DEFAULT" variable (:constant-flag t) nil [8999 9029])
            ("BOOST_PARAMETETER_FUNCTION_EAT_KEYWORD_QUALIFIER_out" variable (:constant-flag t) nil [9081 9133])
            ("BOOST_PARAMETETER_FUNCTION_EAT_KEYWORD_QUALIFIER_in_out" variable (:constant-flag t) nil [9146 9201])
            ("BOOST_PARAMETER_FUNCTION_IS_KEYWORD_QUALIFIER" variable (:constant-flag t) nil [9268 9313])
            ("BOOST_PARAMETETER_FUNCTION_GET_KEYWORD_QUALIFIER_out" variable (:constant-flag t) nil [9444 9496])
            ("BOOST_PARAMETETER_FUNCTION_GET_KEYWORD_QUALIFIER_in_out" variable (:constant-flag t) nil [9511 9566])
            ("BOOST_PARAMETER_FUNCTION_KEYWORD_GET" variable (:constant-flag t) nil [9581 9617])
            ("BOOST_PARAMETER_FUNCTION_KEYWORD" variable (:constant-flag t) nil [9848 9880])
            ("BOOST_PARAMETER_FN_ARG_KEYWORD" variable (:constant-flag t) nil [10069 10099])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_TEMPLATE_Z" variable (:constant-flag t) nil [10235 10283])
            ("BOOST_PARAMETER_FUNCTION_FWD_MATCH_Z" variable (:constant-flag t) nil [10472 10508])
            ("BOOST_PARAMETER_FUNCTION_PARAMETERS_NAME" variable (:constant-flag t) nil [10783 10823])
            ("BOOST_PARAMETER_FUNCTION_RESULT_NAME" variable (:constant-flag t) nil [11059 11095])
            ("BOOST_PARAMETER_IMPL" variable (:constant-flag t) nil [11493 11513])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION00" variable (:constant-flag t) nil [11610 11649])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION0" variable (:constant-flag t) nil [13262 13300])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_ARITY_0" variable (:constant-flag t) nil [13508 13553])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_ARITY_N" variable (:constant-flag t) nil [13729 13774])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION" variable (:constant-flag t) nil [14140 14177])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS0" variable (:constant-flag t) nil [14368 14407])
            ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS" variable (:constant-flag t) nil [14712 14750])
            ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_optional" variable (:constant-flag t) nil [15004 15058])
            ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_required" variable (:constant-flag t) nil [15094 15148])
            ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_deduced_optional" variable (:constant-flag t) nil [15184 15246])
            ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_deduced_required" variable (:constant-flag t) nil [15309 15371])
            ("BOOST_PARAMETER_PREDICATE_TYPE" variable (:constant-flag t) nil [15654 15684])
            ("BOOST_PARAMETER_FUNCTION_PARAMETERS_M" variable (:constant-flag t) nil [15715 15752])
            ("BOOST_PARAMETER_FUNCTION_PARAMETERS" variable (:constant-flag t) nil [17322 17357])
            ("BOOST_PARAMETER_FUNCTION_RESULT_ARG" variable (:constant-flag t) nil [18545 18580])
            ("BOOST_PARAMETER_FUNCTION_RESULT_" variable (:constant-flag t) nil [18668 18700])
            ("BOOST_PARAMETER_FUNCTION_RESULT" variable (:constant-flag t) nil [19510 19541])
            ("BOOST_PARAMETER_FUNCTION_IMPL_HEAD" variable (:constant-flag t) nil [19676 19710])
            ("BOOST_PARAMETER_FUNCTION_IMPL_FWD" variable (:constant-flag t) nil [19982 20015])
            ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_required" variable (:constant-flag t) nil [20085 20128])
            ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_deduced_required" variable (:constant-flag t) nil [20382 20433])
            ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_optional" variable (:constant-flag t) nil [20518 20561])
            ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_deduced_optional" variable (:constant-flag t) nil [20815 20866])
            ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG" variable (:constant-flag t) nil [20951 20985])
            ("BOOST_PARAMETER_FUNCTION_SPLIT_ARGS" variable (:constant-flag t) nil [21216 21251])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG_NAME" variable (:constant-flag t) nil [21417 21467])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_TEMPLATE_ARG" variable (:constant-flag t) nil [21613 21667])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG" variable (:constant-flag t) nil [21817 21862])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_PARAMETER" variable (:constant-flag t) nil [22043 22094])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_NAME" variable (:constant-flag t) nil [22207 22244])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS" variable (:constant-flag t) nil [22582 22624])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_DEFAULT" variable (:constant-flag t) nil [23035 23080])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_GET_ARG" variable (:constant-flag t) nil [23266 23315])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_BODY" variable (:constant-flag t) nil [23577 23623])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_ACTUAL_DEFAULT" variable (:constant-flag t) nil [24326 24378])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_DEFAULT_BODY" variable (:constant-flag t) nil [24581 24631])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION0" variable (:constant-flag t) nil [26407 26449])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION" variable (:constant-flag t) nil [27490 27531])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_GET_ARG" variable (:constant-flag t) nil [28173 28213])
            ("BOOST_PARAMETER_FUNCTION_INITIAL_DISPATCH_FUNCTION" variable (:constant-flag t) nil [28653 28703])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_LAYER_AUX" variable (:constant-flag t) nil [29450 29492])
            ("BOOST_PARAMETER_FUNCTION_DEFAULT_LAYER" variable (:constant-flag t) nil [30627 30665])
            ("BOOST_PARAMETER_FUNCTION_HEAD" variable (:constant-flag t) nil [30941 30970])
            ("BOOST_PARAMETER_FUNCTION_AUX" variable (:constant-flag t) nil [31378 31406])
            ("BOOST_PARAMETER_FUNCTION" variable (:constant-flag t) nil [32124 32148])
            ("BOOST_PARAMETER_BASIC_FUNCTION_AUX" variable (:constant-flag t) nil [32550 32584])
            ("BOOST_PARAMETER_BASIC_FUNCTION" variable (:constant-flag t) nil [33382 33412])
            ("BOOST_PARAMETER_BASIC_MEMBER_FUNCTION_AUX" variable (:constant-flag t) nil [33820 33861])
            ("BOOST_PARAMETER_BASIC_MEMBER_FUNCTION" variable (:constant-flag t) nil [34642 34679])
            ("BOOST_PARAMETER_BASIC_CONST_MEMBER_FUNCTION" variable (:constant-flag t) nil [34886 34929])
            ("BOOST_PARAMETER_MEMBER_FUNCTION_AUX" variable (:constant-flag t) nil [35138 35173])
            ("BOOST_PARAMETER_MEMBER_FUNCTION" variable (:constant-flag t) nil [35856 35887])
            ("BOOST_PARAMETER_CONST_MEMBER_FUNCTION" variable (:constant-flag t) nil [36251 36288])
            ("BOOST_PARAMETER_FUNCTION_ARGUMENT" variable (:constant-flag t) nil [36703 36736])
            ("BOOST_PARAMETER_PARENTHESIZED_BASE" variable (:constant-flag t) nil [37090 37124])
            ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR00" variable (:constant-flag t) nil [37185 37227])
            ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR0" variable (:constant-flag t) nil [38194 38235])
            ("BOOST_PARAMETER_FUNCTION_FWD_PRODUCT" variable (:constant-flag t) nil [38446 38482])
            ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR_ARITY_0" variable (:constant-flag t) nil [38526 38574])
            ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR_ARITY_N" variable (:constant-flag t) nil [38753 38801])
            ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR" variable (:constant-flag t) nil [39170 39210])
            ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTORS0" variable (:constant-flag t) nil [39407 39449])
            ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTORS" variable (:constant-flag t) nil [39733 39774])
            ("BOOST_PARAMETER_CONSTRUCTOR_AUX" variable (:constant-flag t) nil [39957 39988])
            ("BOOST_PARAMETER_CONSTRUCTOR" variable (:constant-flag t) nil [40323 40350])
            ("BOOST_PARAMETER_FUNCTION_FWD_COMBINATION" variable (:constant-flag t) nil [40581 40621])
            ("BOOST_PARAMETER_FUNCTION_FWD_COMBINATION" variable (:constant-flag t) nil [41420 41460])
            ("BOOST_PARAMETER_FUNCTION_FWD_COMBINATIONS" variable (:constant-flag t) nil [41724 41765]))          
      :file "preprocessor.hpp"
      :pointmax 41905
      :fsize 41904
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax '((punctuation 4607 . 4608) (punctuation 4606 . 4607) (punctuation 4605 . 4606) (symbol 4594 . 4600) (punctuation 4593 . 4594) (punctuation 4592 . 4593) (symbol 4589 . 4592) (punctuation 4587 . 4588) (symbol 4565 . 4580) (punctuation 4563 . 4564) (symbol 4544 . 4556) (punctuation 4543 . 4544) (punctuation 4542 . 4543) (symbol 4532 . 4542) (TYPENAME 4523 . 4531) (punctuation 4521 . 4522) (symbol 4510 . 4514) (punctuation 4509 . 4510) (punctuation 4508 . 4509) (semantic-list 4407 . 4508) (symbol 4377 . 4407) (TYPENAME 4368 . 4376) (punctuation 4358 . 4359) (symbol 4345 . 4358) (TYPENAME 4336 . 4344) (TYPEDEF 4328 . 4335) (punctuation 4299 . 4300) (semantic-list 4202 . 4298) (symbol 4175 . 4202) (punctuation 4248 . 4249) (punctuation 4173 . 4174) (symbol 4160 . 4170) (CLASS 4154 . 4159) (punctuation 4148 . 4149) (TEMPLATE 4139 . 4147) (punctuation 3108 . 3109) (semantic-list 3106 . 3108) (punctuation 3104 . 3105) (semantic-list 3069 . 3099) (symbol 3049 . 3069) (punctuation 3039 . 3040) (symbol 3034 . 3039) (TEMPLATE 3025 . 3033) (punctuation 3024 . 3025) (punctuation 3023 . 3024) (symbol 3013 . 3023) (punctuation 3011 . 3012) (symbol 3003 . 3008) (STRUCT 2996 . 3002) (punctuation 2994 . 2995) (semantic-list 2897 . 2993) (symbol 2870 . 2897) (punctuation 2943 . 2944) (punctuation 2868 . 2869) (symbol 2855 . 2865) (CLASS 2849 . 2854) (punctuation 2843 . 2844) (TEMPLATE 2834 . 2842) (punctuation 2752 . 2753) (semantic-list 2700 . 2752) (punctuation 2698 . 2699) (semantic-list 2690 . 2698) (VOID 2685 . 2689) (punctuation 2684 . 2685) (symbol 2668 . 2684) (STRUCT 2661 . 2667) (punctuation 2659 . 2660) (symbol 2653 . 2659) (CLASS 2647 . 2652) (punctuation 2646 . 2647) (TEMPLATE 2637 . 2645) (punctuation 2546 . 2547) (semantic-list 2515 . 2546) (punctuation 2513 . 2514) (semantic-list 2502 . 2513) (punctuation 2501 . 2502) (VOID 2496 . 2500) (punctuation 2495 . 2496) (symbol 2479 . 2495) (STRUCT 2472 . 2478) (punctuation 2470 . 2471) (symbol 2461 . 2470) (CLASS 2455 . 2460) (punctuation 2454 . 2455) (TEMPLATE 2445 . 2453))
      :lexical-table 
        '(("BOOST_PARAMETETER_FUNCTION_GET_KEYWORD_QUALIFIER_out" (spp-arg-list ("x") 9496 . 9499) . ((symbol "x" 9500 . 9501)))
          ("BOOST_PARAMETER_FUNCTION_PARAMETERS_NAME" (spp-arg-list ("base") 10823 . 10829) . ((symbol "BOOST_PP_CAT" 10836 . 10848) (semantic-list "( \\
        boost_param_parameters_ \\
      , BOOST_PP_CAT(__LINE__, BOOST_PARAMETER_MEMBER_FUNCTION_NAME(base)) \\
    )" 10848 . 10968)))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS" (spp-arg-list ("result" "name" "args" "const_" "combinations") 14750 . 14790) . ((symbol "BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS0" 14797 . 14836) (semantic-list "( \\
        result, name, args, const_, combinations, BOOST_PARAMETER_ARITY_RANGE(args) \\
    )" 14836 . 14931)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_DEFAULT_BODY" (spp-arg-list ("name" "n" "split_args" "tag_ns" "const_") 24631 . 24668) . 
              ((TEMPLATE "template" 24675 . 24683) (punctuation "<" 24684 . 24685) (CLASS "class" 24696 . 24701) (symbol "ResultType" 24702 . 24712) (punctuation "," 24721 . 24722) (CLASS "class" 24723 . 24728) (symbol "Args" 24729 . 24733) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS" 24744 . 24786) (semantic-list "( \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_TEMPLATE_ARG \\
          , BOOST_PP_INC(n) \\
          , split_args \\
        )" 24786 . 24923) (punctuation ">" 24930 . 24931) (symbol "BOOST_PARAMETER_MEMBER_FUNCTION_STATIC" 24938 . 24976) (semantic-list "(name)" 24976 . 24982) (symbol "ResultType" 24989 . 24999) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_NAME" 25000 . 25037) (semantic-list "(name)" 25037 . 25043) (semantic-list "( \\
        ResultType(*)() \\
      , Args const& args \\
      , long \\
        BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS( \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG \\
          , BOOST_PP_INC(n) \\
          , split_args \\
        ) \\
      , boost::parameter::aux::use_default_tag \\
    )" 25043 . 25350) (symbol "BOOST_PP_EXPR_IF" 25351 . 25367) (semantic-list "(const_, const)" 25367 . 25382) (semantic-list "{ \\
        return BOOST_PARAMETER_FUNCTION_DEFAULT_NAME(name)( \\
            (ResultType(*)())0 \\
          , args \\
          , 0L \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS( \\
                BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_PARAMETER \\
              , BOOST_PP_INC(n) \\
              , split_args \\
            ) \\
          , BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_ACTUAL_DEFAULT( \\
                BOOST_PP_SEQ_ELEM( \\
                    BOOST_PP_SUB(BOOST_PP_TUPLE_ELEM(4,2,split_args), BOOST_PP_INC(n)) \\
                  , BOOST_PP_TUPLE_ELEM(4,3,split_args) \\
                ) \\
            ) \\
        ); \\
    }" 25389 . 26037)))
          ("BOOST_PARAMETER_FUNCTION_INITIAL_DISPATCH_FUNCTION" (spp-arg-list ("name" "split_args" "const_" "tag_ns") 28703 . 28737) . 
              ((TEMPLATE "template" 28744 . 28752) (punctuation "<" 28753 . 28754) (CLASS "class" 28754 . 28759) (symbol "Args" 28760 . 28764) (punctuation ">" 28764 . 28765) (TYPENAME "typename" 28772 . 28780) (symbol "BOOST_PARAMETER_FUNCTION_RESULT_NAME" 28781 . 28817) (semantic-list "(name)" 28817 . 28823) (punctuation "<" 28823 . 28824) (symbol "Args" 28824 . 28828) (punctuation ">" 28828 . 28829) (punctuation ":" 28829 . 28830) (punctuation ":" 28830 . 28831) (symbol "type" 28831 . 28835) (symbol "BOOST_PARAMETER_MEMBER_FUNCTION_STATIC" 28842 . 28880) (semantic-list "(name)" 28880 . 28886) (symbol "BOOST_PARAMETER_IMPL" 28893 . 28913) (semantic-list "(name)" 28913 . 28919) (semantic-list "(Args const& args)" 28919 . 28937) (symbol "BOOST_PP_EXPR_IF" 28938 . 28954) (semantic-list "(const_, const)" 28954 . 28969) (semantic-list "{ \\
        return BOOST_PARAMETER_FUNCTION_DEFAULT_NAME(name)( \\
            (typename BOOST_PARAMETER_FUNCTION_RESULT_NAME(name)<Args>::type(*)())0 \\
          , args \\
          , 0L \\
 \\
            BOOST_PP_SEQ_FOR_EACH( \\
                BOOST_PARAMETER_FUNCTION_DEFAULT_GET_ARG \\
              , tag_ns \\
              , BOOST_PP_TUPLE_ELEM(4,1,split_args) \\
            ) \\
 \\
        ); \\
    }" 28976 . 29379)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_LAYER" (spp-arg-list ("name" "args" "skip_fwd_decl" "const_" "tag_ns") 30665 . 30708) . ((symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_LAYER_AUX" 30715 . 30757) (semantic-list "( \\
        name, BOOST_PARAMETER_FUNCTION_SPLIT_ARGS(args), skip_fwd_decl, const_, tag_ns \\
    )" 30757 . 30855)))
          ("BOOST_PARAMETER_FUNCTION" (spp-arg-list ("result" "name" "tag_namespace" "args") 32148 . 32183) . ((symbol "BOOST_PARAMETER_FUNCTION_AUX" 32193 . 32221) (semantic-list "(                                       \\
        result, name, tag_namespace                                      \\
      , BOOST_PARAMETER_FLATTEN(3, 2, 3, args)                           \\
    )" 32221 . 32418)))
          ("BOOST_PARAMETER_MEMBER_FUNCTION_IS_STATIC" (spp-arg-list ("name") 6635 . 6641) . ((symbol "BOOST_PARAMETER_IS_NULLARY" 6648 . 6674) (semantic-list "( \\
        BOOST_PP_CAT(BOOST_PARAMETER_MEMBER_FUNCTION_CHECK_STATIC_,name) \\
    )" 6674 . 6758)))
          ("BOOST_PARAMETER_MEMBER_FUNCTION_STATIC" (spp-arg-list ("name") 7652 . 7658) . ((symbol "BOOST_PP_EXPR_IF" 7665 . 7681) (semantic-list "( \\
        BOOST_PARAMETER_MEMBER_FUNCTION_IS_STATIC(name) \\
      , static \\
    )" 7681 . 7765)))
          ("BOOST_PARAMETER_FUNCTION_RESULT" (spp-arg-list ("result" "name" "args") 19541 . 19561) . ((symbol "BOOST_PARAMETER_FUNCTION_RESULT_" 19569 . 19601) (semantic-list "(result, name, args)" 19601 . 19621)))
          ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR0" (spp-arg-list ("r" "data" "elem") 38235 . 38250) . ((symbol "BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR00" 38257 . 38299) (semantic-list "( \\
        BOOST_PP_TUPLE_ELEM(6,0,data) \\
      , BOOST_PP_TUPLE_ELEM(6,1,data) \\
      , r \\
      , data \\
      , elem \\
    )" 38299 . 38430)))
          ("BOOST_PARAMETER_MEMBER_FUNCTION_STRIP_STATIC_static")
          ("BOOST_PARAMETER_FUNCTION_IS_KEYWORD_QUALIFIER" (spp-arg-list ("x") 9313 . 9316) . ((symbol "BOOST_PP_IS_EMPTY" 9323 . 9340) (semantic-list "( \\
        BOOST_PP_CAT(BOOST_PARAMETETER_FUNCTION_EAT_KEYWORD_QUALIFIER_, x) \\
    )" 9340 . 9426)))
          ("BOOST_PARAMETER_FUNCTION_IMPL_FWD" (spp-arg-list ("name") 20015 . 20021) . 
              ((symbol "BOOST_PARAMETER_FUNCTION_IMPL_HEAD" 20028 . 20062) (semantic-list "(name)" 20062 . 20068) (punctuation ";" 20068 . 20069)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_PARAMETER" (spp-arg-list ("r" "_" "arg") 22094 . 22105) . 
              ((punctuation "," 22112 . 22113) (symbol "BOOST_PARAMETER_FN_ARG_KEYWORD" 22114 . 22144) (semantic-list "(arg)" 22144 . 22149)))
          ("BOOST_PARAMETER_BASIC_FUNCTION" (spp-arg-list ("result" "name" "tag_namespace" "args") 33412 . 33447) . ((symbol "BOOST_PARAMETER_BASIC_FUNCTION_AUX" 33455 . 33489) (semantic-list "(                                     \\
        result, name, tag_namespace                                     \\
      , BOOST_PARAMETER_FLATTEN(2, 2, 3, args)                          \\
    )" 33489 . 33682)))
          ("BOOST_PARAMETER_ARITY_RANGE_M_optional" (spp-arg-list ("state") 8091 . 8098) . ((symbol "state" 8099 . 8104)))
          ("BOOST_PARAMETER_FN_ARG_KEYWORD" (spp-arg-list ("x") 10099 . 10102) . ((symbol "BOOST_PARAMETER_FUNCTION_KEYWORD" 10109 . 10141) (semantic-list "( \\
        BOOST_PARAMETER_FN_ARG_NAME(x) \\
    )" 10141 . 10191)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_DEFAULT" (spp-arg-list ("arg" "tag_namespace") 23080 . 23100) . 
              ((symbol "boost" 23107 . 23112) (punctuation ":" 23112 . 23113) (punctuation ":" 23113 . 23114) (symbol "parameter" 23114 . 23123) (punctuation ":" 23123 . 23124) (punctuation ":" 23124 . 23125) (symbol "keyword" 23125 . 23132) (punctuation "<" 23132 . 23133) (symbol "tag_namespace" 23144 . 23157) (punctuation ":" 23157 . 23158) (punctuation ":" 23158 . 23159) (symbol "BOOST_PARAMETER_FN_ARG_KEYWORD" 23159 . 23189) (semantic-list "(arg)" 23189 . 23194) (punctuation ">" 23201 . 23202) (punctuation ":" 23202 . 23203) (punctuation ":" 23203 . 23204) (symbol "instance" 23204 . 23212) (punctuation "|" 23213 . 23214) (symbol "boost" 23215 . 23220) (punctuation ":" 23220 . 23221) (punctuation ":" 23221 . 23222) (symbol "parameter" 23222 . 23231) (punctuation ":" 23231 . 23232) (punctuation ":" 23232 . 23233) (symbol "aux" 23233 . 23236) (punctuation ":" 23236 . 23237) (punctuation ":" 23237 . 23238) (symbol "use_default_tag" 23238 . 23253) (semantic-list "()" 23253 . 23255)))
          ("BOOST_PARAMETER_BASIC_MEMBER_FUNCTION" (spp-arg-list ("result" "name" "tag_namespace" "args") 34679 . 34714) . ((symbol "BOOST_PARAMETER_BASIC_MEMBER_FUNCTION_AUX" 34721 . 34762) (semantic-list "( \\
        result, name, tag_namespace \\
      , BOOST_PARAMETER_FLATTEN(2, 2, 3, args) \\
      , 0 \\
    )" 34762 . 34870)))
          ("BOOST_PARAMETER_PARENTHESIZED_BASE" (spp-arg-list ("x") 37124 . 37127) . ((symbol "BOOST_PARAMETER_PARENTHESIZED_TYPE" 37128 . 37162) (semantic-list "(x)" 37162 . 37165)))
          ("BOOST_PARAMETER_FUNCTION_KEYWORD_GET" (spp-arg-list ("x") 9617 . 9620) . ((symbol "BOOST_PP_CAT" 9627 . 9639) (semantic-list "(BOOST_PARAMETETER_FUNCTION_GET_KEYWORD_QUALIFIER_, x)" 9639 . 9693)))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_TEMPLATE_Z" (spp-arg-list ("z" "n") 10283 . 10289) . 
              ((TEMPLATE "template" 10296 . 10304) (punctuation "<" 10304 . 10305) (symbol "BOOST_PP_ENUM_PARAMS_Z" 10305 . 10327) (semantic-list "(z, n, class ParameterArgumentType)" 10327 . 10362) (punctuation ">" 10362 . 10363)))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION0" (spp-arg-list ("r" "data" "elem") 13300 . 13315) . ((symbol "BOOST_PARAMETER_FUNCTION_FWD_FUNCTION00" 13322 . 13361) (semantic-list "( \\
        BOOST_PP_TUPLE_ELEM(7,0,data) \\
      , BOOST_PP_TUPLE_ELEM(7,1,data) \\
      , r \\
      , data \\
      , elem \\
    )" 13361 . 13492)))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION" (spp-arg-list ("z" "n" "data") 14177 . 14189) . 
              ((symbol "BOOST_PP_IF" 14196 . 14207) (semantic-list "( \\
        n \\
      , BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_ARITY_N \\
      , BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_ARITY_0 \\
    )" 14207 . 14340) (semantic-list "(z,n,data)" 14340 . 14350)))
          ("BOOST_PARAMETER_FUNCTION_RESULT_" (spp-arg-list ("result" "name" "args") 18700 . 18720) . 
              ((TEMPLATE "template" 18761 . 18769) (punctuation "<" 18770 . 18771) (CLASS "class" 18771 . 18776) (symbol "Args" 18777 . 18781) (punctuation ">" 18781 . 18782) (STRUCT "struct" 18859 . 18865) (symbol "BOOST_PARAMETER_FUNCTION_RESULT_NAME" 18866 . 18902) (semantic-list "(name)" 18902 . 18908) (semantic-list "{                                                                                           \\
        typedef typename BOOST_PARAMETER_PARENTHESIZED_TYPE(result) type;                       \\
    }" 18957 . 19154) (punctuation ";" 19154 . 19155)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_BODY" (spp-arg-list ("name" "n" "split_args" "tag_namespace") 23623 . 23659) . ((semantic-list "{ \\
        return BOOST_PARAMETER_FUNCTION_DEFAULT_NAME(name)( \\
            (ResultType(*)())0 \\
          , args \\
          , 0L \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS( \\
                BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_PARAMETER \\
              , n \\
              , split_args \\
            ) \\
          , BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_GET_ARG( \\
                BOOST_PP_SEQ_ELEM( \\
                    BOOST_PP_SUB(BOOST_PP_TUPLE_ELEM(4,2,split_args), n) \\
                  , BOOST_PP_TUPLE_ELEM(4,3,split_args) \\
                ) \\
              , tag_namespace \\
            ) \\
        ); \\
    }" 23666 . 24315)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION0" (spp-arg-list ("z" "n" "data") 26449 . 26461) . 
              ((TEMPLATE "template" 26468 . 26476) (punctuation "<" 26477 . 26478) (CLASS "class" 26489 . 26494) (symbol "ResultType" 26495 . 26505) (punctuation "," 26514 . 26515) (CLASS "class" 26516 . 26521) (symbol "Args" 26522 . 26526) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS" 26537 . 26579) (semantic-list "( \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_TEMPLATE_ARG \\
          , n \\
          , BOOST_PP_TUPLE_ELEM(5,1,data) \\
        )" 26579 . 26721) (punctuation ">" 26728 . 26729) (symbol "BOOST_PARAMETER_MEMBER_FUNCTION_STATIC" 26736 . 26774) (semantic-list "(BOOST_PP_TUPLE_ELEM(5,0,data))" 26774 . 26805) (symbol "ResultType" 26812 . 26822) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_NAME" 26823 . 26860) (semantic-list "(BOOST_PP_TUPLE_ELEM(5,0,data))" 26860 . 26891) (semantic-list "( \\
        ResultType(*)() \\
      , Args const& args \\
      , int \\
        BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS( \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG \\
          , n \\
          , BOOST_PP_TUPLE_ELEM(5,1,data) \\
        ) \\
    )" 26891 . 27153) (symbol "BOOST_PP_EXPR_IF" 27154 . 27170) (semantic-list "(BOOST_PP_TUPLE_ELEM(5,2,data), const)" 27170 . 27208) (symbol "BOOST_PP_IF" 27215 . 27226) (semantic-list "( \\
        n \\
      , BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_BODY \\
      , ; BOOST_PP_TUPLE_EAT(4) \\
    )" 27226 . 27338) (semantic-list "( \\
        BOOST_PP_TUPLE_ELEM(5,0,data) \\
      , n \\
      , BOOST_PP_TUPLE_ELEM(5,1,data) \\
      , BOOST_PP_TUPLE_ELEM(5,3,data) \\
    )" 27338 . 27479)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_LAYER_AUX" (spp-arg-list ("\\
" "name" "split_args" "skip_fwd_decl" "const_" "tag_namespace" "\\
") 29492 . 29560) . 
              ((symbol "BOOST_PP_REPEAT_FROM_TO" 29567 . 29590) (semantic-list "( \\
        0 \\
      , BOOST_PP_INC(BOOST_PP_TUPLE_ELEM(4, 2, split_args)) \\
      , BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION \\
      , (name, split_args, const_, tag_namespace, skip_fwd_decl) \\
    )" 29590 . 29792) (symbol "BOOST_PARAMETER_FUNCTION_INITIAL_DISPATCH_FUNCTION" 29802 . 29852) (semantic-list "(name, split_args, const_, tag_namespace)" 29852 . 29893) (TEMPLATE "template" 29902 . 29910) (punctuation "<" 29911 . 29912) (CLASS "class" 29923 . 29928) (symbol "ResultType" 29929 . 29939) (punctuation "," 29948 . 29949) (CLASS "class" 29950 . 29955) (symbol "Args" 29956 . 29960) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS" 29971 . 30013) (semantic-list "( \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_TEMPLATE_ARG \\
          , 0 \\
          , split_args \\
        )" 30013 . 30136) (punctuation ">" 30143 . 30144) (symbol "BOOST_PARAMETER_MEMBER_FUNCTION_STATIC" 30151 . 30189) (semantic-list "(name)" 30189 . 30195) (symbol "ResultType" 30202 . 30212) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_NAME" 30213 . 30250) (semantic-list "(name)" 30250 . 30256) (semantic-list "( \\
        ResultType(*)() \\
      , Args const& args \\
      , int \\
        BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS( \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG \\
          , 0 \\
          , split_args \\
        ) \\
    )" 30256 . 30499) (symbol "BOOST_PP_EXPR_IF" 30500 . 30516) (semantic-list "(const_, const)" 30516 . 30531)))
          ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR" (spp-arg-list ("z" "n" "data") 39210 . 39222) . 
              ((symbol "BOOST_PP_IF" 39229 . 39240) (semantic-list "( \\
        n \\
      , BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR_ARITY_N \\
      , BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR_ARITY_0 \\
    )" 39240 . 39379) (semantic-list "(z,n,data)" 39379 . 39389)))
          ("BOOST_PARAMETER_PREPROCESSOR_060206_HPP")
          ("BOOST_PARAMETER_MEMBER_FUNCTION_CHECK_STATIC_static" . ((semantic-list "()" 6582 . 6584)))
          ("BOOST_PARAMETER_MEMBER_FUNCTION_STRIP_STATIC" (spp-arg-list ("name") 6902 . 6908) . ((symbol "BOOST_PP_CAT" 6915 . 6927) (semantic-list "(BOOST_PARAMETER_MEMBER_FUNCTION_STRIP_STATIC_, name)" 6927 . 6980)))
          ("BOOST_PARAMETER_MEMBER_FUNCTION_NAME" (spp-arg-list ("name") 7812 . 7818) . 
              ((symbol "BOOST_PP_IF" 7825 . 7836) (semantic-list "( \\
        BOOST_PARAMETER_MEMBER_FUNCTION_IS_STATIC(name) \\
      , BOOST_PARAMETER_MEMBER_FUNCTION_STRIP_STATIC \\
      , name BOOST_PP_TUPLE_EAT(1) \\
    )" 7836 . 7995) (semantic-list "(name)" 7995 . 8001)))
          ("BOOST_PARAMETER_ARITY_RANGE_M_required" (spp-arg-list ("state") 8221 . 8228) . ((symbol "BOOST_PP_INC" 8229 . 8241) (semantic-list "(state)" 8241 . 8248)))
          ("BOOST_PARAMETER_IMPL" (spp-arg-list ("base") 11513 . 11519) . ((symbol "BOOST_PP_CAT" 11526 . 11538) (semantic-list "(boost_param_impl,BOOST_PARAMETER_MEMBER_FUNCTION_NAME(base))" 11538 . 11599)))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION00" (spp-arg-list ("z" "n" "r" "data" "elem") 11649 . 11670) . 
              ((symbol "BOOST_PP_IF" 11677 . 11688) (semantic-list "( \\
        n \\
      , BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_TEMPLATE_Z, BOOST_PP_TUPLE_EAT(2) \\
    )" 11688 . 11791) (semantic-list "(z,n)" 11791 . 11796) (symbol "BOOST_PARAMETER_MEMBER_FUNCTION_STATIC" 11803 . 11841) (semantic-list "(BOOST_PP_TUPLE_ELEM(7,3,data))" 11841 . 11872) (INLINE "inline" 11879 . 11885) (symbol "BOOST_PP_EXPR_IF" 11892 . 11908) (semantic-list "(n, typename)" 11908 . 11921) (symbol "BOOST_PARAMETER_FUNCTION_RESULT_NAME" 11932 . 11968) (semantic-list "(BOOST_PP_TUPLE_ELEM(7,3,data))" 11968 . 11999) (punctuation "<" 11999 . 12000) (symbol "BOOST_PP_EXPR_IF" 12013 . 12029) (semantic-list "(n, typename)" 12029 . 12042) (symbol "boost" 12053 . 12058) (punctuation ":" 12058 . 12059) (punctuation ":" 12059 . 12060) (symbol "parameter" 12060 . 12069) (punctuation ":" 12069 . 12070) (punctuation ":" 12070 . 12071) (symbol "aux" 12071 . 12074) (punctuation ":" 12074 . 12075) (punctuation ":" 12075 . 12076) (symbol "argument_pack" 12076 . 12089) (punctuation "<" 12089 . 12090) (symbol "BOOST_PARAMETER_FUNCTION_PARAMETERS_NAME" 12105 . 12145) (semantic-list "(BOOST_PP_TUPLE_ELEM(7,3,data))" 12145 . 12176) (symbol "BOOST_PP_COMMA_IF" 12191 . 12208) (semantic-list "(n)" 12208 . 12211) (symbol "BOOST_PP_IF" 12226 . 12237) (semantic-list "( \\
                n, BOOST_PP_SEQ_ENUM, BOOST_PP_TUPLE_EAT(1) \\
            )" 12237 . 12316) (semantic-list "(elem)" 12316 . 12322) (punctuation ">" 12333 . 12334) (punctuation ":" 12334 . 12335) (punctuation ":" 12335 . 12336) (symbol "type" 12336 . 12340) (punctuation ">" 12347 . 12348) (punctuation ":" 12348 . 12349) (punctuation ":" 12349 . 12350) (symbol "type" 12350 . 12354) (symbol "BOOST_PARAMETER_MEMBER_FUNCTION_NAME" 12361 . 12397) (semantic-list "(BOOST_PP_TUPLE_ELEM(7,3,data))" 12397 . 12428) (semantic-list "( \\
        BOOST_PP_IF( \\
            n \\
          , BOOST_PP_SEQ_FOR_EACH_I_R \\
          , BOOST_PP_TUPLE_EAT(4) \\
        )( \\
            r \\
          , BOOST_PARAMETER_FUNCTION_ARGUMENT \\
          , ~ \\
          , elem \\
        ) \\
        BOOST_PP_IF(n, BOOST_PARAMETER_FUNCTION_FWD_MATCH_Z, BOOST_PP_TUPLE_EAT(4))( \\
            z \\
          , BOOST_PP_TUPLE_ELEM(7,3,data) \\
          , BOOST_PARAMETER_FUNCTION_PARAMETERS_NAME(BOOST_PP_TUPLE_ELEM(7,3,data)) \\
          , n \\
        ) \\
    )" 12428 . 12937) (symbol "BOOST_PP_EXPR_IF" 12938 . 12954) (semantic-list "(BOOST_PP_TUPLE_ELEM(7,4,data), const)" 12954 . 12992) (semantic-list "{ \\
        return BOOST_PARAMETER_IMPL(BOOST_PP_TUPLE_ELEM(7,3,data))( \\
            BOOST_PARAMETER_FUNCTION_PARAMETERS_NAME(BOOST_PP_TUPLE_ELEM(7,3,data))()( \\
                BOOST_PP_ENUM_PARAMS_Z(z, n, a) \\
            ) \\
        ); \\
    }" 12999 . 13246)))
          ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_deduced_optional" (spp-arg-list ("tag") 15246 . 15251) . 
              ((symbol "optional" 15258 . 15266) (punctuation "<" 15266 . 15267) (symbol "boost" 15267 . 15272) (punctuation ":" 15272 . 15273) (punctuation ":" 15273 . 15274) (symbol "parameter" 15274 . 15283) (punctuation ":" 15283 . 15284) (punctuation ":" 15284 . 15285) (symbol "deduced" 15285 . 15292) (punctuation "<" 15292 . 15293) (symbol "tag" 15293 . 15296) (punctuation ">" 15296 . 15297)))
          ("BOOST_PARAMETER_FUNCTION_RESULT_ARG" (spp-arg-list ("z" "_" "i" "x") 18580 . 18592) . 
              ((symbol "BOOST_PP_COMMA_IF" 18599 . 18616) (semantic-list "(i)" 18616 . 18619) (CLASS "class" 18620 . 18625) (symbol "BOOST_PP_TUPLE_ELEM" 18626 . 18645) (semantic-list "(3,1,x)" 18645 . 18652)))
          ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG" (spp-arg-list ("s" "state" "arg") 20985 . 21000) . 
              ((symbol "BOOST_PP_CAT" 21007 . 21019) (semantic-list "( \\
        BOOST_PARAMETER_FUNCTION_SPLIT_ARG_ \\
      , BOOST_PARAMETER_FN_ARG_QUALIFIER(arg) \\
    )" 21019 . 21122) (semantic-list "(state, arg)" 21122 . 21134)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_NAME" (spp-arg-list ("name") 22244 . 22250) . ((symbol "BOOST_PP_CAT" 22257 . 22269) (semantic-list "( \\
        boost_param_default_ \\
      , BOOST_PP_CAT(__LINE__, BOOST_PARAMETER_MEMBER_FUNCTION_NAME(name)) \\
    )" 22269 . 22386)))
          ("BOOST_PARAMETER_FUNCTION_FWD_COMBINATIONS" (spp-arg-list ("args") 41765 . 41771) . ((symbol "BOOST_PP_SEQ_FOR_EACH_I" 41778 . 41801) (semantic-list "(BOOST_PARAMETER_FUNCTION_FWD_COMBINATION, ~, args)" 41801 . 41852)))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS0" (spp-arg-list ("\\
" "result" "name" "args" "const_" "combinations" "range" "\\
") 14407 . 14461) . ((symbol "BOOST_PP_REPEAT_FROM_TO" 14468 . 14491) (semantic-list "( \\
        BOOST_PP_TUPLE_ELEM(2,0,range), BOOST_PP_TUPLE_ELEM(2,1,range) \\
      , BOOST_PARAMETER_FUNCTION_FWD_FUNCTION \\
      , (result,name,const_,combinations,BOOST_PP_TUPLE_ELEM(2,1,range)) \\
    )" 14491 . 14696)))
          ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_optional" (spp-arg-list ("state" "arg") 20561 . 20573) . ((semantic-list "( \\
        BOOST_PP_TUPLE_ELEM(4, 0, state) \\
      , BOOST_PP_TUPLE_ELEM(4, 1, state) \\
      , BOOST_PP_INC(BOOST_PP_TUPLE_ELEM(4, 2, state)) \\
      , BOOST_PP_SEQ_PUSH_BACK(BOOST_PP_TUPLE_ELEM(4, 3, state), arg) \\
    )" 20580 . 20804)))
          ("BOOST_PARAMETER_FUNCTION_SPLIT_ARGS" (spp-arg-list ("args") 21251 . 21257) . ((symbol "BOOST_PP_SEQ_FOLD_LEFT" 21264 . 21286) (semantic-list "( \\
        BOOST_PARAMETER_FUNCTION_SPLIT_ARG \\
      , (0,BOOST_PP_SEQ_NIL, 0,BOOST_PP_SEQ_NIL) \\
      , args \\
    )" 21286 . 21406)))
          ("BOOST_PARAMETER_FUNCTION_AUX" (spp-arg-list ("result" "name" "tag_namespace" "args") 31406 . 31441) . 
              ((symbol "BOOST_PARAMETER_FUNCTION_HEAD" 31451 . 31480) (semantic-list "(result, name, tag_namespace, args)" 31480 . 31515) (symbol "BOOST_PARAMETER_FUNCTION_IMPL_HEAD" 31530 . 31564) (semantic-list "(name)" 31564 . 31570) (punctuation ";" 31570 . 31571) (symbol "BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS" 31580 . 31618) (semantic-list "(                                  \\
        result, name, args, 0                                                \\
      , BOOST_PARAMETER_FUNCTION_FWD_COMBINATIONS(args)                      \\
    )" 31618 . 31818) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_LAYER" 31975 . 32013) (semantic-list "(name, args, 0, 0, tag_namespace)" 32013 . 32046)))
          ("BOOST_PARAMETETER_FUNCTION_EAT_KEYWORD_QUALIFIER_in_out" (spp-arg-list ("x") 9201 . 9204))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_ARITY_0" (spp-arg-list ("z" "n" "data") 13553 . 13565) . ((symbol "BOOST_PARAMETER_FUNCTION_FWD_FUNCTION00" 13572 . 13611) (semantic-list "( \\
        z, n, BOOST_PP_DEDUCE_R() \\
      , (z, n, BOOST_PP_TUPLE_REM(5) data) \\
      , ~ \\
    )" 13611 . 13713)))
          ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_deduced_required" (spp-arg-list ("tag") 15371 . 15376) . 
              ((symbol "required" 15383 . 15391) (punctuation "<" 15391 . 15392) (symbol "boost" 15392 . 15397) (punctuation ":" 15397 . 15398) (punctuation ":" 15398 . 15399) (symbol "parameter" 15399 . 15408) (punctuation ":" 15408 . 15409) (punctuation ":" 15409 . 15410) (symbol "deduced" 15410 . 15417) (punctuation "<" 15417 . 15418) (symbol "tag" 15418 . 15421) (punctuation ">" 15421 . 15422)))
          ("BOOST_PARAMETER_PREDICATE_TYPE" (spp-arg-list ("p") 15684 . 15687) . ((VOID "void" 15688 . 15692) (symbol "p" 15693 . 15694)))
          ("BOOST_PARAMETER_FUNCTION_IMPL_HEAD" (spp-arg-list ("name") 19710 . 19716) . 
              ((TEMPLATE "template" 19733 . 19741) (punctuation "<" 19742 . 19743) (CLASS "class" 19743 . 19748) (symbol "Args" 19749 . 19753) (punctuation ">" 19753 . 19754) (TYPENAME "typename" 19795 . 19803) (symbol "BOOST_PARAMETER_FUNCTION_RESULT_NAME" 19804 . 19840) (semantic-list "(name)" 19840 . 19846) (punctuation "<" 19846 . 19847) (symbol "Args" 19860 . 19864) (punctuation ">" 19919 . 19920) (punctuation ":" 19920 . 19921) (punctuation ":" 19921 . 19922) (symbol "type" 19922 . 19926) (symbol "BOOST_PARAMETER_IMPL" 19927 . 19947) (semantic-list "(name)" 19947 . 19953) (semantic-list "(Args const& args)" 19953 . 19971)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_ARGUMENTS" (spp-arg-list ("macro" "n" "split_args") 22624 . 22646) . 
              ((symbol "BOOST_PP_SEQ_FOR_EACH" 22653 . 22674) (semantic-list "( \\
        macro \\
      , ~ \\
      , BOOST_PP_TUPLE_ELEM(4,1,split_args) \\
    )" 22674 . 22757) (symbol "BOOST_PP_SEQ_FOR_EACH" 22764 . 22785) (semantic-list "( \\
        macro \\
      , ~ \\
      , BOOST_PP_SEQ_FIRST_N( \\
          BOOST_PP_SUB(BOOST_PP_TUPLE_ELEM(4,2,split_args), n) \\
        , BOOST_PP_TUPLE_ELEM(4,3,split_args) \\
        ) \\
    )" 22785 . 22979)))
          ("BOOST_PARAMETER_FUNCTION_HEAD" (spp-arg-list ("result" "name" "tag_namespace" "args") 30970 . 31005) . 
              ((symbol "BOOST_PARAMETER_FUNCTION_RESULT" 31016 . 31047) (semantic-list "(result, name, args)" 31047 . 31067) (symbol "BOOST_PARAMETER_FUNCTION_PARAMETERS" 31176 . 31211) (semantic-list "(tag_namespace, name, args)" 31211 . 31238) (symbol "BOOST_PARAMETER_FUNCTION_PARAMETERS_NAME" 31254 . 31294) (semantic-list "(name)" 31294 . 31300) (punctuation ";" 31300 . 31301)))
          ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR_ARITY_0" (spp-arg-list ("z" "n" "data") 38574 . 38586) . ((symbol "BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR00" 38593 . 38635) (semantic-list "( \\
        z, n, BOOST_PP_DEDUCE_R() \\
      , (z, n, BOOST_PP_TUPLE_REM(4) data) \\
      , ~ \\
    )" 38635 . 38737)))
          ("BOOST_PARAMETER_CONSTRUCTOR_AUX" (spp-arg-list ("class_" "base" "tag_namespace" "args") 39988 . 40023) . 
              ((symbol "BOOST_PARAMETER_FUNCTION_PARAMETERS" 40030 . 40065) (semantic-list "(tag_namespace, ctor, args)" 40065 . 40092) (symbol "BOOST_PP_CAT" 40112 . 40124) (semantic-list "(constructor_parameters, __LINE__)" 40124 . 40158) (punctuation ";" 40158 . 40159) (symbol "BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTORS" 40168 . 40209) (semantic-list "( \\
        class_, base, args \\
      , BOOST_PARAMETER_FUNCTION_FWD_COMBINATIONS(args) \\
    )" 40209 . 40305)))
          ("BOOST_PARAMETER_ARITY_RANGE_M" (spp-arg-list ("s" "state" "x") 8371 . 8384) . 
              ((symbol "BOOST_PP_CAT" 8391 . 8403) (semantic-list "( \\
        BOOST_PARAMETER_ARITY_RANGE_M_ \\
      , BOOST_PARAMETER_FN_ARG_QUALIFIER(x) \\
    )" 8403 . 8499) (semantic-list "(state)" 8499 . 8506)))
          ("BOOST_PARAMETER_FN_ARG_DEFAULT" (spp-arg-list ("x") 9029 . 9032) . ((symbol "BOOST_PP_TUPLE_ELEM" 9039 . 9058) (semantic-list "(4,3,x)" 9058 . 9065)))
          ("BOOST_PARAMETER_FUNCTION_FWD_MATCH_Z" (spp-arg-list ("z" "name" "parameters" "n") 10508 . 10532) . 
              ((punctuation "," 10539 . 10540) (TYPENAME "typename" 10541 . 10549) (symbol "boost" 10550 . 10555) (punctuation ":" 10555 . 10556) (punctuation ":" 10556 . 10557) (symbol "parameter" 10557 . 10566) (punctuation ":" 10566 . 10567) (punctuation ":" 10567 . 10568) (symbol "aux" 10568 . 10571) (punctuation ":" 10571 . 10572) (punctuation ":" 10572 . 10573) (symbol "match" 10573 . 10578) (punctuation "<" 10578 . 10579) (symbol "parameters" 10592 . 10602) (punctuation "," 10602 . 10603) (symbol "BOOST_PP_ENUM_PARAMS" 10604 . 10624) (semantic-list "(n, ParameterArgumentType)" 10624 . 10650) (punctuation ">" 10659 . 10660) (punctuation ":" 10660 . 10661) (punctuation ":" 10661 . 10662) (symbol "type" 10662 . 10666) (punctuation "=" 10667 . 10668) (symbol "parameters" 10669 . 10679) (semantic-list "()" 10679 . 10681)))
          ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_optional" (spp-arg-list ("tag") 15058 . 15063) . 
              ((symbol "optional" 15070 . 15078) (punctuation "<" 15078 . 15079) (symbol "tag" 15079 . 15082)))
          ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_required" (spp-arg-list ("state" "arg") 20128 . 20140) . ((semantic-list "( \\
        BOOST_PP_INC(BOOST_PP_TUPLE_ELEM(4, 0, state)) \\
      , BOOST_PP_SEQ_PUSH_BACK(BOOST_PP_TUPLE_ELEM(4, 1, state), arg) \\
      , BOOST_PP_TUPLE_ELEM(4, 2, state) \\
      , BOOST_PP_TUPLE_ELEM(4, 3, state) \\
    )" 20147 . 20371)))
          ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_deduced_optional" (spp-arg-list ("state" "arg") 20866 . 20878) . ((symbol "BOOST_PARAMETER_FUNCTION_SPLIT_ARG_optional" 20885 . 20928) (semantic-list "(state, arg)" 20928 . 20940)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_GET_ARG" (spp-arg-list ("arg" "tag_ns") 23315 . 23328) . ((symbol "BOOST_PARAMETER_FUNCTION_CAST" 23335 . 23364) (semantic-list "( \\
        args[ \\
            BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_DEFAULT( \\
                arg, tag_ns \\
            ) \\
        ] \\
      , BOOST_PARAMETER_FN_ARG_PRED(arg) \\
      , Args \\
    )" 23364 . 23566)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_GET_ARG" (spp-arg-list ("r" "tag_ns" "arg") 28213 . 28229) . 
              ((punctuation "," 28236 . 28237) (symbol "BOOST_PARAMETER_FUNCTION_CAST" 28238 . 28267) (semantic-list "( \\
          args[ \\
              boost::parameter::keyword<tag_ns::BOOST_PARAMETER_FN_ARG_KEYWORD(arg)>::instance \\
          ] \\
        , BOOST_PARAMETER_FN_ARG_PRED(arg) \\
        , Args \\
      )" 28267 . 28469)))
          ("BOOST_PARAMETER_BASIC_CONST_MEMBER_FUNCTION" (spp-arg-list ("result" "name" "tag_namespace" "args") 34929 . 34964) . ((symbol "BOOST_PARAMETER_BASIC_MEMBER_FUNCTION_AUX" 34971 . 35012) (semantic-list "( \\
        result, name, tag_namespace \\
      , BOOST_PARAMETER_FLATTEN(2, 2, 3, args) \\
      , 1 \\
    )" 35012 . 35120)))
          ("BOOST_PARAMETER_FUNCTION_ARGUMENT" (spp-arg-list ("r" "_" "i" "elem") 36736 . 36751) . 
              ((symbol "BOOST_PP_COMMA_IF" 36758 . 36775) (semantic-list "(i)" 36775 . 36778) (symbol "elem" 36779 . 36783) (punctuation "&" 36783 . 36784) (symbol "BOOST_PP_CAT" 36785 . 36797) (semantic-list "(a, i)" 36797 . 36803)))
          ("BOOST_PARAMETER_FUNCTION_FWD_PRODUCT" (spp-arg-list ("r" "product") 38482 . 38494) . ((semantic-list "(product)" 38501 . 38510)))
          ("BOOST_PARAMETER_ARITY_RANGE_M_deduced_optional" (spp-arg-list ("state") 8160 . 8167) . ((symbol "state" 8168 . 8173)))
          ("BOOST_PARAMETETER_FUNCTION_EAT_KEYWORD_QUALIFIER_out" (spp-arg-list ("x") 9133 . 9136))
          ("BOOST_PARAMETER_BASIC_FUNCTION_AUX" (spp-arg-list ("result" "name" "tag_namespace" "args") 32584 . 32619) . 
              ((symbol "BOOST_PARAMETER_FUNCTION_HEAD" 32629 . 32658) (semantic-list "(result, name, tag_namespace, args)" 32658 . 32693) (symbol "BOOST_PARAMETER_FUNCTION_IMPL_FWD" 32785 . 32818) (semantic-list "(name)" 32818 . 32824) (symbol "BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS" 32941 . 32979) (semantic-list "(                                 \\
        result, name, args, 0                                               \\
      , BOOST_PARAMETER_FUNCTION_FWD_COMBINATIONS(args)                     \\
    )" 32979 . 33176) (symbol "BOOST_PARAMETER_FUNCTION_IMPL_HEAD" 33331 . 33365) (semantic-list "(name)" 33365 . 33371)))
          ("BOOST_PARAMETER_CONST_MEMBER_FUNCTION" (spp-arg-list ("result" "name" "tag_namespace" "args") 36288 . 36323) . ((symbol "BOOST_PARAMETER_MEMBER_FUNCTION_AUX" 36333 . 36368) (semantic-list "(                                       \\
        result, name, tag_namespace, 1                                     \\
      , BOOST_PARAMETER_FLATTEN(3, 2, 3, args)                           \\
    )" 36368 . 36567)))
          ("BOOST_PARAMETER_FN_ARG_NAME" (spp-arg-list ("x") 8868 . 8871) . ((symbol "BOOST_PP_TUPLE_ELEM" 8878 . 8897) (semantic-list "(4,1,x)" 8897 . 8904)))
          ("BOOST_PARAMETER_FN_ARG_PRED" (spp-arg-list ("x") 8947 . 8950) . ((symbol "BOOST_PP_TUPLE_ELEM" 8957 . 8976) (semantic-list "(4,2,x)" 8976 . 8983)))
          ("BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_required" (spp-arg-list ("tag") 15148 . 15153) . 
              ((symbol "required" 15160 . 15168) (punctuation "<" 15168 . 15169) (symbol "tag" 15169 . 15172)))
          ("BOOST_PARAMETER_FUNCTION_PARAMETERS" (spp-arg-list ("tag_namespace" "base" "args") 17357 . 17384) . 
              ((TEMPLATE "template" 17403 . 17411) (punctuation "<" 17412 . 17413) (CLASS "class" 17413 . 17418) (symbol "BoostParameterDummy" 17419 . 17438) (punctuation ">" 17438 . 17439) (STRUCT "struct" 17489 . 17495) (symbol "BOOST_PP_CAT" 17496 . 17508) (semantic-list "(                                                            \\
            BOOST_PP_CAT(boost_param_params_, __LINE__)                             \\
          , BOOST_PARAMETER_MEMBER_FUNCTION_NAME(base)                              \\
    )" 17508 . 17748) (punctuation ":" 17749 . 17750) (symbol "boost" 17751 . 17756) (punctuation ":" 17756 . 17757) (punctuation ":" 17757 . 17758) (symbol "parameter" 17758 . 17767) (punctuation ":" 17767 . 17768) (punctuation ":" 17768 . 17769) (symbol "parameters" 17769 . 17779) (punctuation "<" 17779 . 17780) (symbol "BOOST_PP_SEQ_FOR_EACH_I" 17841 . 17864) (semantic-list "(                                                \\
                BOOST_PARAMETER_FUNCTION_PARAMETERS_M, tag_namespace, args          \\
            )" 17864 . 18014) (punctuation ">" 18095 . 18096) (semantic-list "{}" 18177 . 18179) (punctuation ";" 18179 . 18180) (TYPEDEF "typedef" 18349 . 18356) (symbol "BOOST_PP_CAT" 18357 . 18369) (semantic-list "( \\
            BOOST_PP_CAT(boost_param_params_, __LINE__) \\
          , BOOST_PARAMETER_MEMBER_FUNCTION_NAME(base) \\
    )" 18369 . 18493) (punctuation "<" 18493 . 18494) (INT "int" 18494 . 18497) (punctuation ">" 18497 . 18498)))
          ("BOOST_PARAMETER_FUNCTION_SPLIT_ARG_deduced_required" (spp-arg-list ("state" "arg") 20433 . 20445) . ((symbol "BOOST_PARAMETER_FUNCTION_SPLIT_ARG_required" 20452 . 20495) (semantic-list "(state, arg)" 20495 . 20507)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_TEMPLATE_ARG" (spp-arg-list ("r" "_" "arg") 21667 . 21678) . 
              ((punctuation "," 21685 . 21686) (CLASS "class" 21687 . 21692) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG_NAME" 21693 . 21743) (semantic-list "( \\
              BOOST_PARAMETER_FN_ARG_KEYWORD(arg) \\
      )" 21743 . 21806)))
          ("BOOST_PARAMETER_BASIC_MEMBER_FUNCTION_AUX" (spp-arg-list ("result" "name" "tag_namespace" "args" "const_") 33861 . 33904) . 
              ((symbol "BOOST_PARAMETER_FUNCTION_HEAD" 33911 . 33940) (semantic-list "(result, name, tag_namespace, args)" 33940 . 33975) (symbol "BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS" 34091 . 34129) (semantic-list "(                                             \\
        result, name, args, const_                                                      \\
      , BOOST_PARAMETER_FUNCTION_FWD_COMBINATIONS(args)                                 \\
    )" 34129 . 34362) (symbol "BOOST_PARAMETER_FUNCTION_IMPL_HEAD" 34541 . 34575) (semantic-list "(name)" 34575 . 34581) (symbol "BOOST_PP_EXPR_IF" 34582 . 34598) (semantic-list "(const_, const)" 34598 . 34613)))
          ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR00" (spp-arg-list ("z" "n" "r" "data" "elem") 37227 . 37248) . 
              ((symbol "BOOST_PP_IF" 37255 . 37266) (semantic-list "( \\
        n \\
      , BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_TEMPLATE_Z, BOOST_PP_TUPLE_EAT(2) \\
    )" 37266 . 37369) (semantic-list "(z, n)" 37369 . 37375) (symbol "BOOST_PP_EXPR_IF" 37382 . 37398) (semantic-list "(BOOST_PP_EQUAL(n,1), explicit)" 37398 . 37429) (symbol "BOOST_PP_TUPLE_ELEM" 37436 . 37455) (semantic-list "(6,2,data)" 37455 . 37465) (semantic-list "( \\
        BOOST_PP_IF( \\
            n \\
          , BOOST_PP_SEQ_FOR_EACH_I_R \\
          , BOOST_PP_TUPLE_EAT(4) \\
        )( \\
            r \\
          , BOOST_PARAMETER_FUNCTION_ARGUMENT \\
          , ~ \\
          , elem \\
        ) \\
        BOOST_PP_IF(n, BOOST_PARAMETER_FUNCTION_FWD_MATCH_Z, BOOST_PP_TUPLE_EAT(4))( \\
            z \\
          , BOOST_PP_TUPLE_ELEM(6,3,data) \\
          , BOOST_PP_CAT(constructor_parameters, __LINE__) \\
          , n \\
        ) \\
    )" 37465 . 37949) (punctuation ":" 37958 . 37959) (symbol "BOOST_PARAMETER_PARENTHESIZED_BASE" 37960 . 37994) (semantic-list "(BOOST_PP_TUPLE_ELEM(6,3,data))" 37994 . 38025) (semantic-list "( \\
            BOOST_PP_CAT(constructor_parameters, __LINE__)()( \\
                BOOST_PP_ENUM_PARAMS_Z(z, n, a) \\
            ) \\
        )" 38026 . 38169) (semantic-list "{}" 38176 . 38178)))
          ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTORS" (spp-arg-list ("class_" "base" "args" "combinations") 39774 . 39805) . ((symbol "BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTORS0" 39812 . 39854) (semantic-list "( \\
        class_, base, args, combinations, BOOST_PARAMETER_ARITY_RANGE(args) \\
    )" 39854 . 39941)))
          ("BOOST_PARAMETER_CONSTRUCTOR" (spp-arg-list ("class_" "base" "tag_namespace" "args") 40350 . 40385) . ((symbol "BOOST_PARAMETER_CONSTRUCTOR_AUX" 40392 . 40423) (semantic-list "( \\
        class_, base, tag_namespace \\
      , BOOST_PARAMETER_FLATTEN(2, 2, 3, args) \\
    )" 40423 . 40519)))
          ("BOOST_PARAMETER_IS_NULLARY" (spp-arg-list ("x") 6485 . 6488) . ((symbol "BOOST_PP_IS_NULLARY" 6489 . 6508) (semantic-list "(x)" 6508 . 6511)))
          ("BOOST_PARAMETER_ARITY_RANGE_M_deduced_required" (spp-arg-list ("state") 8304 . 8311) . ((symbol "BOOST_PP_INC" 8312 . 8324) (semantic-list "(state)" 8324 . 8331)))
          ("BOOST_PARAMETER_ARITY_RANGE" (spp-arg-list ("args") 8549 . 8555) . ((semantic-list "( \\
        BOOST_PP_SEQ_FOLD_LEFT(BOOST_PARAMETER_ARITY_RANGE_M, 0, args) \\
      , BOOST_PP_INC(BOOST_PP_SEQ_SIZE(args)) \\
    )" 8562 . 8692)))
          ("BOOST_PARAMETETER_FUNCTION_GET_KEYWORD_QUALIFIER_in_out" (spp-arg-list ("x") 9566 . 9569) . ((symbol "x" 9570 . 9571)))
          ("BOOST_PARAMETER_FUNCTION_KEYWORD" (spp-arg-list ("x") 9880 . 9883) . 
              ((symbol "BOOST_PP_IF" 9890 . 9901) (semantic-list "( \\
        BOOST_PARAMETER_FUNCTION_IS_KEYWORD_QUALIFIER(x) \\
      , BOOST_PARAMETER_FUNCTION_KEYWORD_GET \\
      , x BOOST_PP_TUPLE_EAT(1) \\
    )" 9901 . 10050) (semantic-list "(x)" 10050 . 10053)))
          ("BOOST_PARAMETER_FUNCTION_FWD_FUNCTION_ARITY_N" (spp-arg-list ("z" "n" "data") 13774 . 13786) . ((symbol "BOOST_PP_SEQ_FOR_EACH" 13793 . 13814) (semantic-list "( \\
        BOOST_PARAMETER_FUNCTION_FWD_FUNCTION0 \\
      , (z, n, BOOST_PP_TUPLE_REM(5) data) \\
      , BOOST_PP_SEQ_FOR_EACH_PRODUCT( \\
            BOOST_PARAMETER_FUNCTION_FWD_PRODUCT \\
          , BOOST_PP_SEQ_FIRST_N( \\
                n, BOOST_PP_TUPLE_ELEM(5,3,data) \\
            ) \\
        ) \\
    )" 13814 . 14124)))
          ("BOOST_PARAMETER_FUNCTION_PARAMETERS_M" (spp-arg-list ("r" "tag_namespace" "i" "elem") 15752 . 15776) . 
              ((symbol "BOOST_PP_COMMA_IF" 15783 . 15800) (semantic-list "(i)" 15800 . 15803) (symbol "boost" 15810 . 15815) (punctuation ":" 15815 . 15816) (punctuation ":" 15816 . 15817) (symbol "parameter" 15817 . 15826) (punctuation ":" 15826 . 15827) (punctuation ":" 15827 . 15828) (symbol "BOOST_PP_CAT" 15828 . 15840) (semantic-list "( \\
        BOOST_PARAMETER_FUNCTION_PARAMETERS_QUALIFIER_ \\
      , BOOST_PARAMETER_FN_ARG_QUALIFIER(elem) \\
    )" 15840 . 15955) (semantic-list "( \\
        tag_namespace::BOOST_PARAMETER_FUNCTION_KEYWORD( \\
            BOOST_PARAMETER_FN_ARG_KEYWORD(elem) \\
        ) \\
    )" 15955 . 16086) (punctuation "," 16095 . 16096) (TYPENAME "typename" 16097 . 16105) (symbol "boost" 16106 . 16111) (punctuation ":" 16111 . 16112) (punctuation ":" 16112 . 16113) (symbol "parameter" 16113 . 16122) (punctuation ":" 16122 . 16123) (punctuation ":" 16123 . 16124) (symbol "aux" 16124 . 16127) (punctuation ":" 16127 . 16128) (punctuation ":" 16128 . 16129) (symbol "unwrap_predicate" 16129 . 16145) (punctuation "<" 16145 . 16146) (symbol "BOOST_PARAMETER_PREDICATE_TYPE" 16161 . 16191) (semantic-list "(BOOST_PARAMETER_FN_ARG_PRED(elem))" 16191 . 16226) (punctuation ">" 16237 . 16238) (punctuation ":" 16238 . 16239) (punctuation ":" 16239 . 16240) (symbol "type" 16240 . 16244) (punctuation ">" 16251 . 16252)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG_NAME" (spp-arg-list ("keyword") 21467 . 21476) . ((symbol "BOOST_PP_CAT" 21483 . 21495) (semantic-list "(BOOST_PP_CAT(keyword,_),type)" 21495 . 21525)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_ACTUAL_DEFAULT" (spp-arg-list ("arg") 24378 . 24383) . ((symbol "BOOST_PARAMETER_FUNCTION_CAST" 24390 . 24419) (semantic-list "( \\
        boost::parameter::aux::as_lvalue(BOOST_PARAMETER_FN_ARG_DEFAULT(arg), 0L) \\
      , BOOST_PARAMETER_FN_ARG_PRED(arg) \\
      , Args \\
    )" 24419 . 24570)))
          ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR_ARITY_N" (spp-arg-list ("z" "n" "data") 38801 . 38813) . ((symbol "BOOST_PP_SEQ_FOR_EACH" 38820 . 38841) (semantic-list "( \\
        BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR0 \\
      , (z, n, BOOST_PP_TUPLE_REM(4) data) \\
      , BOOST_PP_SEQ_FOR_EACH_PRODUCT( \\
            BOOST_PARAMETER_FUNCTION_FWD_PRODUCT \\
          , BOOST_PP_SEQ_FIRST_N( \\
                n, BOOST_PP_TUPLE_ELEM(4,2,data) \\
            ) \\
        ) \\
    )" 38841 . 39154)))
          ("BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTORS0" (spp-arg-list ("class_" "base" "args" "combinations" "range") 39449 . 39486) . ((symbol "BOOST_PP_REPEAT_FROM_TO" 39493 . 39516) (semantic-list "( \\
        BOOST_PP_TUPLE_ELEM(2,0,range), BOOST_PP_TUPLE_ELEM(2,1,range) \\
      , BOOST_PARAMETER_FUNCTION_FWD_CONSTRUCTOR \\
      , (class_,base,combinations,BOOST_PP_TUPLE_ELEM(2,1,range)) \\
    )" 39516 . 39717)))
          ("BOOST_PARAMETER_FUNCTION_FWD_COMBINATION" (spp-arg-list ("r" "_" "i" "elem") 41460 . 41475) . ((semantic-list "(BOOST_PP_IF( \\
        BOOST_PARAMETER_FUNCTION_IS_KEYWORD_QUALIFIER( \\
            BOOST_PARAMETER_FN_ARG_NAME(elem) \\
        ) \\
      , (ParameterArgumentType ## i) \\
      , (const ParameterArgumentType ## i) \\
    ))" 41482 . 41705)))
          ("BOOST_PARAMETER_FN_ARG_QUALIFIER" (spp-arg-list ("x") 8789 . 8792) . ((symbol "BOOST_PP_TUPLE_ELEM" 8799 . 8818) (semantic-list "(4,0,x)" 8818 . 8825)))
          ("BOOST_PARAMETER_FUNCTION_RESULT_NAME" (spp-arg-list ("base") 11095 . 11101) . ((symbol "BOOST_PP_CAT" 11108 . 11120) (semantic-list "( \\
        boost_param_result_ \\
      , BOOST_PP_CAT(__LINE__,BOOST_PARAMETER_MEMBER_FUNCTION_NAME(base)) \\
    )" 11120 . 11235)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG" (spp-arg-list ("r" "_" "arg") 21862 . 21873) . 
              ((punctuation "," 21880 . 21881) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION_ARG_NAME" 21882 . 21932) (semantic-list "( \\
              BOOST_PARAMETER_FN_ARG_KEYWORD(arg) \\
      )" 21932 . 21995) (punctuation "&" 21995 . 21996) (symbol "BOOST_PARAMETER_FN_ARG_KEYWORD" 21997 . 22027) (semantic-list "(arg)" 22027 . 22032)))
          ("BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION" (spp-arg-list ("z" "n" "data") 27531 . 27543) . 
              ((symbol "BOOST_PP_IF" 27550 . 27561) (semantic-list "( \\
        BOOST_PP_AND( \\
            BOOST_PP_NOT(n) \\
          , BOOST_PP_TUPLE_ELEM(5,4,data) \\
        ) \\
      , BOOST_PP_TUPLE_EAT(3) \\
      , BOOST_PARAMETER_FUNCTION_DEFAULT_FUNCTION0 \\
    )" 27561 . 27765) (semantic-list "(z, n, data)" 27765 . 27777) (symbol "BOOST_PP_IF" 27784 . 27795) (semantic-list "( \\
        BOOST_PP_EQUAL(n, BOOST_PP_TUPLE_ELEM(4,2,BOOST_PP_TUPLE_ELEM(5,1,data))) \\
      , BOOST_PP_TUPLE_EAT(5) \\
      , BOOST_PARAMETER_FUNCTION_DEFAULT_EVAL_DEFAULT_BODY \\
    )" 27795 . 27981) (semantic-list "( \\
        BOOST_PP_TUPLE_ELEM(5,0,data) \\
      , n \\
      , BOOST_PP_TUPLE_ELEM(5,1,data) \\
      , BOOST_PP_TUPLE_ELEM(5,3,data) \\
      , BOOST_PP_TUPLE_ELEM(5,2,data) \\
    )" 27981 . 28162)))
          ("BOOST_PARAMETER_MEMBER_FUNCTION_AUX" (spp-arg-list ("result" "name" "tag_namespace" "const_" "args") 35173 . 35216) . 
              ((symbol "BOOST_PARAMETER_FUNCTION_HEAD" 35226 . 35255) (semantic-list "(result, name, tag_namespace, args)" 35255 . 35290) (symbol "BOOST_PARAMETER_FUNCTION_FWD_FUNCTIONS" 35307 . 35345) (semantic-list "(                                  \\
        result, name, args, const_                                           \\
      , BOOST_PARAMETER_FUNCTION_FWD_COMBINATIONS(args)                      \\
    )" 35345 . 35545) (symbol "BOOST_PARAMETER_FUNCTION_DEFAULT_LAYER" 35702 . 35740) (semantic-list "(name, args, 1, const_, tag_namespace)" 35740 . 35778)))
          ("BOOST_PARAMETER_MEMBER_FUNCTION" (spp-arg-list ("result" "name" "tag_namespace" "args") 35887 . 35922) . ((symbol "BOOST_PARAMETER_MEMBER_FUNCTION_AUX" 35932 . 35967) (semantic-list "(                                       \\
        result, name, tag_namespace, 0                                     \\
      , BOOST_PARAMETER_FLATTEN(3, 2, 3, args)                           \\
    )" 35967 . 36166)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("BOOST_PARAMETER_CONFIG_050403_HPP" variable (:constant-flag t) nil [288 321])
            ("BOOST_PARAMETER_MAX_ARITY" variable (:constant-flag t) nil [366 391]))          
      :file "config.hpp"
      :pointmax 447
      :fsize 446
      :lastmodtime '(21413 1116 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_PARAMETER_CONFIG_050403_HPP")
          ("BOOST_PARAMETER_MAX_ARITY" . ((number "8" 392 . 393)))
          )
))
  :file "!usr!include!boost!parameter!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
